{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\n\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\"; // Utilities\n\nimport { defineComponent, useRender } from \"../../util/index.mjs\";\nimport { toRef } from 'vue';\nexport const VTimelineDivider = defineComponent({\n  name: 'VTimelineDivider',\n  props: {\n    dotColor: String,\n    fillDot: Boolean,\n    hideDot: Boolean,\n    icon: IconValue,\n    iconColor: String,\n    lineColor: String,\n    ...makeRoundedProps(),\n    ...makeSizeProps(),\n    ...makeElevationProps()\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      sizeClasses,\n      sizeStyles\n    } = useSize(props, 'v-timeline-divider__dot');\n    const {\n      backgroundColorStyles,\n      backgroundColorClasses\n    } = useBackgroundColor(toRef(props, 'dotColor'));\n    const {\n      roundedClasses\n    } = useRounded(props, 'v-timeline-divider__dot');\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      backgroundColorClasses: lineColorClasses,\n      backgroundColorStyles: lineColorStyles\n    } = useBackgroundColor(toRef(props, 'lineColor'));\n    provideDefaults({\n      VIcon: {\n        color: toRef(props, 'iconColor'),\n        icon: toRef(props, 'icon'),\n        size: toRef(props, 'size')\n      }\n    });\n    useRender(() => {\n      var _slots$default, _slots$default2;\n\n      return _createVNode(\"div\", {\n        \"class\": ['v-timeline-divider', {\n          'v-timeline-divider--fill-dot': props.fillDot\n        }]\n      }, [!props.hideDot && _createVNode(\"div\", {\n        \"key\": \"dot\",\n        \"class\": ['v-timeline-divider__dot', elevationClasses.value, roundedClasses.value, sizeClasses.value],\n        \"style\": sizeStyles.value\n      }, [_createVNode(\"div\", {\n        \"class\": ['v-timeline-divider__inner-dot', backgroundColorClasses.value, roundedClasses.value],\n        \"style\": backgroundColorStyles.value\n      }, [((_slots$default = (_slots$default2 = slots.default) == null ? void 0 : _slots$default2.call(slots)) != null ? _slots$default : props.icon) ? _createVNode(VIcon, null, null) : undefined])]), _createVNode(\"div\", {\n        \"class\": ['v-timeline-divider__line', lineColorClasses.value],\n        \"style\": lineColorStyles.value\n      }, null)]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;SACSA,a,sBAET;;SACSC,iB;SACAC,oBAAoBC,oB;SACpBC,kBAAkBC,kB;SAClBC,eAAeC,e;SACfC,uB;SACAC,0B,+BAET;;SACSC,iBAAiBC,iB;AAC1B,SAASC,KAAT,QAAsB,KAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAGH,eAAe,CAAC;EAC9CI,IAAI,EAAE,kBADwC;EAG9CC,KAAK,EAAE;IACLC,QAAQ,EAAEC,MADL;IAELC,OAAO,EAAEC,OAFJ;IAGLC,OAAO,EAAED,OAHJ;IAILE,IAAI,EAAEpB,SAJD;IAKLqB,SAAS,EAAEL,MALN;IAMLM,SAAS,EAAEN,MANN;IAQL,GAAGb,gBAAgB,EARd;IASL,GAAGE,aAAa,EATX;IAUL,GAAGJ,kBAAkB;EAVhB,CAHuC;;EAgB9CsB,KAAK,CAAET,KAAF,QAAoB;IAAA,IAAX;MAAEU;IAAF,IAAWC;IACvB,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAA8BrB,OAAO,CAACQ,KAAD,EAAQ,yBAAR,CAA3C;IACA,MAAM;MAAEc,qBAAF;MAAyBC;IAAzB,IAAoDrB,kBAAkB,CAACG,KAAK,CAACG,KAAD,EAAQ,UAAR,CAAN,CAA5E;IACA,MAAM;MAAEgB;IAAF,IAAqB1B,UAAU,CAACU,KAAD,EAAQ,yBAAR,CAArC;IACA,MAAM;MAAEiB;IAAF,IAAuB7B,YAAY,CAACY,KAAD,CAAzC;IACA,MAAM;MACJe,sBAAsB,EAAEG,gBADpB;MAEJJ,qBAAqB,EAAEK;IAFnB,IAGFzB,kBAAkB,CAACG,KAAK,CAACG,KAAD,EAAQ,WAAR,CAAN,CAHtB;IAKAP,eAAe,CAAC;MACdR,KAAK,EAAE;QACLmC,KAAK,EAAEvB,KAAK,CAACG,KAAD,EAAQ,WAAR,CADP;QAELM,IAAI,EAAET,KAAK,CAACG,KAAD,EAAQ,MAAR,CAFN;QAGLqB,IAAI,EAAExB,KAAK,CAACG,KAAD,EAAQ,MAAR;MAHN;IADO,CAAD,CAAfP;IAQAG,SAAS,CAAC;MAAA;;MAAA;QAAA,SAEC,CACL,oBADK,EAEL;UACE,gCAAgCI,KAAK,CAACG;QADxC,CAFK;MAFD,IASJ,CAACH,KAAK,CAACK,OAAP;QAAA,OAEM,KAFN;QAAA,SAGS,CACL,yBADK,EAELY,gBAAgB,CAACK,KAFZ,EAGLN,cAAc,CAACM,KAHV,EAILV,WAAW,CAACU,KAJP,CAHT;QAAA,SASUT,UAAU,CAACS;MATrB;QAAA,SAYW,CACL,+BADK,EAELP,sBAAsB,CAACO,KAFlB,EAGLN,cAAc,CAACM,KAHV,CAZX;QAAA,SAiBYR,qBAAqB,CAACQ;MAjBlC,IAmBM,2CAAK,CAACC,OAAN,qDAAK,IAAL,oBAAqBvB,KAAK,CAACM,IAA3B,sCAAgDkB,SAnBtD,IATI;QAAA,SAkCG,CACL,0BADK,EAELN,gBAAgB,CAACI,KAFZ,CAlCH;QAAA,SAsCIH,eAAe,CAACG;MAtCpB;IAAD,EAAT1B;IA2CA,OAAO,EAAP;EACD;;AA9E6C,CAAD,CAAxC","names":["VIcon","IconValue","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeSizeProps","useSize","provideDefaults","useBackgroundColor","defineComponent","useRender","toRef","VTimelineDivider","name","props","dotColor","String","fillDot","Boolean","hideDot","icon","iconColor","lineColor","setup","slots","_ref","sizeClasses","sizeStyles","backgroundColorStyles","backgroundColorClasses","roundedClasses","elevationClasses","lineColorClasses","lineColorStyles","color","size","value","default","undefined"],"sources":["../../../src/components/VTimeline/VTimelineDivider.tsx"],"sourcesContent":["// Components\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { defineComponent, useRender } from '@/util'\nimport { toRef } from 'vue'\n\nexport const VTimelineDivider = defineComponent({\n  name: 'VTimelineDivider',\n\n  props: {\n    dotColor: String,\n    fillDot: Boolean,\n    hideDot: Boolean,\n    icon: IconValue,\n    iconColor: String,\n    lineColor: String,\n\n    ...makeRoundedProps(),\n    ...makeSizeProps(),\n    ...makeElevationProps(),\n  },\n\n  setup (props, { slots }) {\n    const { sizeClasses, sizeStyles } = useSize(props, 'v-timeline-divider__dot')\n    const { backgroundColorStyles, backgroundColorClasses } = useBackgroundColor(toRef(props, 'dotColor'))\n    const { roundedClasses } = useRounded(props, 'v-timeline-divider__dot')\n    const { elevationClasses } = useElevation(props)\n    const {\n      backgroundColorClasses: lineColorClasses,\n      backgroundColorStyles: lineColorStyles,\n    } = useBackgroundColor(toRef(props, 'lineColor'))\n\n    provideDefaults({\n      VIcon: {\n        color: toRef(props, 'iconColor'),\n        icon: toRef(props, 'icon'),\n        size: toRef(props, 'size'),\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-timeline-divider',\n          {\n            'v-timeline-divider--fill-dot': props.fillDot,\n          },\n        ]}\n      >\n        { !props.hideDot && (\n          <div\n            key=\"dot\"\n            class={[\n              'v-timeline-divider__dot',\n              elevationClasses.value,\n              roundedClasses.value,\n              sizeClasses.value,\n            ]}\n            style={ sizeStyles.value }\n          >\n            <div\n              class={[\n                'v-timeline-divider__inner-dot',\n                backgroundColorClasses.value,\n                roundedClasses.value,\n              ]}\n              style={ backgroundColorStyles.value }\n            >\n              { slots.default?.() ?? props.icon ? (<VIcon />) : undefined }\n            </div>\n          </div>\n        ) }\n\n        <div\n          class={[\n            'v-timeline-divider__line',\n            lineColorClasses.value,\n          ]}\n          style={ lineColorStyles.value }\n        />\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VTimelineDivider = InstanceType<typeof VTimelineDivider>\n"]},"metadata":{},"sourceType":"module"}