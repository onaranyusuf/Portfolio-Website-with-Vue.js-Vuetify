{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n/* eslint-disable complexity */\n// Styles\n\nimport \"./VCard.css\"; // Components\n\nimport { VCardActions } from \"./VCardActions.mjs\";\nimport { VCardItem } from \"./VCardItem.mjs\";\nimport { VCardText } from \"./VCardText.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { LoaderSlot, makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\n\nimport { defineComponent, useRender } from \"../../util/index.mjs\";\nexport const VCard = defineComponent({\n  name: 'VCard',\n  directives: {\n    Ripple\n  },\n  props: {\n    appendAvatar: String,\n    appendIcon: IconValue,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    image: String,\n    link: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: Boolean,\n    subtitle: String,\n    text: String,\n    title: String,\n    ...makeThemeProps(),\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLoaderProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeVariantProps({\n      variant: 'elevated'\n    })\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const link = useLink(props, attrs);\n    useRender(() => {\n      var _slots$image, _slots$image2, _slots$text, _slots$text2, _slots$default;\n\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasTitle = !!(slots.title || props.title);\n      const hasSubtitle = !!(slots.subtitle || props.subtitle);\n      const hasHeader = hasTitle || hasSubtitle;\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      const hasImage = !!(slots.image || props.image);\n      const hasCardItem = hasHeader || hasPrepend || hasAppend;\n      const hasText = !!(slots.text || props.text);\n      const isClickable = !props.disabled && (link.isClickable.value || props.link);\n      return _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-card', {\n          'v-card--disabled': props.disabled,\n          'v-card--flat': props.flat,\n          'v-card--hover': props.hover && !(props.disabled || props.flat),\n          'v-card--link': isClickable\n        }, themeClasses.value, borderClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, loaderClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value],\n        \"href\": link.href.value,\n        \"onClick\": isClickable && link.navigate\n      }, {\n        default: () => [hasImage && _createVNode(VDefaultsProvider, {\n          \"key\": \"image\",\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-card__image\"\n          }, [(_slots$image = (_slots$image2 = slots.image) == null ? void 0 : _slots$image2.call(slots)) != null ? _slots$image : _createVNode(VImg, null, null)])]\n        }), _createVNode(LoaderSlot, {\n          \"name\": \"v-card\",\n          \"active\": !!props.loading,\n          \"color\": typeof props.loading === 'boolean' ? undefined : props.loading\n        }, {\n          default: slots.loader\n        }), hasCardItem && _createVNode(VCardItem, {\n          \"key\": \"item\",\n          \"prependAvatar\": props.prependAvatar,\n          \"prependIcon\": props.prependIcon,\n          \"title\": props.title,\n          \"subtitle\": props.subtitle,\n          \"appendAvatar\": props.appendAvatar,\n          \"appendIcon\": props.appendIcon\n        }, {\n          default: slots.item,\n          prepend: slots.prepend,\n          title: slots.title,\n          subtitle: slots.subtitle,\n          append: slots.append\n        }), hasText && _createVNode(VCardText, {\n          \"key\": \"text\"\n        }, {\n          default: () => [(_slots$text = (_slots$text2 = slots.text) == null ? void 0 : _slots$text2.call(slots)) != null ? _slots$text : props.text]\n        }), (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots), slots.actions && _createVNode(VCardActions, null, {\n          default: slots.actions\n        }), genOverlays(isClickable, 'v-card')]\n      }), [[_resolveDirective(\"ripple\"), isClickable]]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VCardActions","VCardItem","VCardText","VDefaultsProvider","VImg","Ripple","genOverlays","makeVariantProps","useVariant","IconValue","LoaderSlot","makeLoaderProps","useLoader","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeLocationProps","useLocation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","provideTheme","defineComponent","useRender","VCard","name","directives","props","appendAvatar","String","appendIcon","disabled","Boolean","flat","hover","image","link","prependAvatar","prependIcon","ripple","subtitle","text","title","variant","setup","attrs","slots","_ref","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","loaderClasses","locationStyles","positionClasses","roundedClasses","Tag","isLink","value","tag","hasTitle","hasSubtitle","hasHeader","hasAppend","append","hasPrepend","prepend","hasImage","hasCardItem","hasText","isClickable","href","navigate","default","cover","src","_slots$image2","loading","undefined","loader","item","_slots$text2","_slots$default","actions"],"sources":["../../../src/components/VCard/VCard.tsx"],"sourcesContent":["/* eslint-disable complexity */\n\n// Styles\nimport './VCard.sass'\n\n// Components\nimport { VCardActions } from './VCardActions'\nimport { VCardItem } from './VCardItem'\nimport { VCardText } from './VCardText'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VImg } from '@/components/VImg'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { IconValue } from '@/composables/icons'\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { defineComponent, useRender } from '@/util'\n\nexport const VCard = defineComponent({\n  name: 'VCard',\n\n  directives: { Ripple },\n\n  props: {\n    appendAvatar: String,\n    appendIcon: IconValue,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    image: String,\n    link: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: Boolean,\n    subtitle: String,\n    text: String,\n    title: String,\n\n    ...makeThemeProps(),\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLoaderProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeVariantProps({ variant: 'elevated' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { loaderClasses } = useLoader(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const link = useLink(props, attrs)\n\n    useRender(() => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasTitle = !!(slots.title || props.title)\n      const hasSubtitle = !!(slots.subtitle || props.subtitle)\n      const hasHeader = hasTitle || hasSubtitle\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n      const hasImage = !!(slots.image || props.image)\n      const hasCardItem = hasHeader || hasPrepend || hasAppend\n      const hasText = !!(slots.text || props.text)\n      const isClickable = !props.disabled && (link.isClickable.value || props.link)\n\n      return (\n        <Tag\n          class={[\n            'v-card',\n            {\n              'v-card--disabled': props.disabled,\n              'v-card--flat': props.flat,\n              'v-card--hover': props.hover && !(props.disabled || props.flat),\n              'v-card--link': isClickable,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            loaderClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            locationStyles.value,\n          ]}\n          href={ link.href.value }\n          onClick={ isClickable && link.navigate }\n          v-ripple={ isClickable }\n        >\n          { hasImage && (\n            <VDefaultsProvider\n              key=\"image\"\n              defaults={{\n                VImg: {\n                  cover: true,\n                  src: props.image,\n                },\n              }}\n            >\n              <div class=\"v-card__image\">\n                { slots.image?.() ?? <VImg /> }\n              </div>\n            </VDefaultsProvider>\n          ) }\n\n          <LoaderSlot\n            name=\"v-card\"\n            active={ !!props.loading }\n            color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n            v-slots={{ default: slots.loader }}\n          />\n\n          { hasCardItem && (\n            <VCardItem\n              key=\"item\"\n              prependAvatar={ props.prependAvatar }\n              prependIcon={ props.prependIcon }\n              title={ props.title }\n              subtitle={ props.subtitle }\n              appendAvatar={ props.appendAvatar }\n              appendIcon={ props.appendIcon }\n            >\n              {{\n                default: slots.item,\n                prepend: slots.prepend,\n                title: slots.title,\n                subtitle: slots.subtitle,\n                append: slots.append,\n              }}\n            </VCardItem>\n          ) }\n\n          { hasText && (\n            <VCardText key=\"text\">\n              { slots.text?.() ?? props.text }\n            </VCardText>\n          ) }\n\n          { slots.default?.() }\n\n          { slots.actions && (\n            <VCardActions v-slots={{ default: slots.actions }} />\n          ) }\n\n          { genOverlays(isClickable, 'v-card') }\n        </Tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCard = InstanceType<typeof VCard>\n"]},"metadata":{},"sourceType":"module"}