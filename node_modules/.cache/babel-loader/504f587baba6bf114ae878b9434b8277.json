{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VToolbar.css\"; // Components\n\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VExpandTransition } from \"../transitions/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\";\nimport { VToolbarTitle } from \"./VToolbarTitle.mjs\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useForwardRef } from \"../../composables/forwardRef.mjs\"; // Utilities\n\nimport { computed, ref, toRef } from 'vue';\nimport { convertToUnit, genericComponent, pick, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'];\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String,\n    default: 'default',\n    validator: v => allowedDensities.includes(v)\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 56\n  },\n  image: String,\n  title: String,\n  ...makeBorderProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({\n    tag: 'header'\n  }),\n  ...makeThemeProps()\n}, 'v-toolbar');\nexport const VToolbar = genericComponent()({\n  name: 'VToolbar',\n  props: makeVToolbarProps(),\n\n  setup(props, _ref) {\n    var _slots$extension;\n\n    let {\n      slots\n    } = _ref;\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const isExtended = ref(!!(props.extended || (_slots$extension = slots.extension) != null && _slots$extension.call(slots)));\n    const contentHeight = computed(() => parseInt(Number(props.height) + (props.density === 'prominent' ? Number(props.height) : 0) - (props.density === 'comfortable' ? 8 : 0) - (props.density === 'compact' ? 16 : 0), 10));\n    const extensionHeight = computed(() => isExtended.value ? parseInt(Number(props.extensionHeight) + (props.density === 'prominent' ? Number(props.extensionHeight) : 0) - (props.density === 'comfortable' ? 4 : 0) - (props.density === 'compact' ? 8 : 0), 10) : 0);\n    provideDefaults({\n      VBtn: {\n        variant: 'text'\n      }\n    });\n    useRender(() => {\n      var _slots$extension2, _slots$image, _slots$prepend, _slots$default, _slots$append;\n\n      const hasTitle = !!(props.title || slots.title);\n      const hasImage = !!(slots.image || props.image);\n      const extension = (_slots$extension2 = slots.extension) == null ? void 0 : _slots$extension2.call(slots);\n      isExtended.value = !!(props.extended || extension);\n      return _createVNode(props.tag, {\n        \"class\": ['v-toolbar', {\n          'v-toolbar--absolute': props.absolute,\n          'v-toolbar--collapse': props.collapse,\n          'v-toolbar--flat': props.flat,\n          'v-toolbar--floating': props.floating,\n          [`v-toolbar--density-${props.density}`]: true\n        }, backgroundColorClasses.value, borderClasses.value, elevationClasses.value, roundedClasses.value, themeClasses.value],\n        \"style\": [backgroundColorStyles.value]\n      }, {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"key\": \"image\",\n          \"class\": \"v-toolbar__image\"\n        }, [_createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          }\n        }, {\n          default: () => [slots.image ? (_slots$image = slots.image) == null ? void 0 : _slots$image.call(slots) : _createVNode(VImg, null, null)]\n        })]), _createVNode(\"div\", {\n          \"class\": \"v-toolbar__content\",\n          \"style\": {\n            height: convertToUnit(contentHeight.value)\n          }\n        }, [slots.prepend && _createVNode(\"div\", {\n          \"class\": \"v-toolbar__prepend\"\n        }, [(_slots$prepend = slots.prepend) == null ? void 0 : _slots$prepend.call(slots)]), hasTitle && _createVNode(VToolbarTitle, {\n          \"key\": \"title\",\n          \"text\": props.title\n        }, {\n          text: slots.title\n        }), (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots), slots.append && _createVNode(\"div\", {\n          \"class\": \"v-toolbar__append\"\n        }, [(_slots$append = slots.append) == null ? void 0 : _slots$append.call(slots)])]), _createVNode(VExpandTransition, null, {\n          default: () => [isExtended.value && _createVNode(\"div\", {\n            \"class\": \"v-toolbar__extension\",\n            \"style\": {\n              height: convertToUnit(extensionHeight.value)\n            }\n          }, [extension])]\n        })]\n      });\n    });\n    return useForwardRef({\n      contentHeight,\n      extensionHeight\n    });\n  }\n\n});\nexport function filterToolbarProps(props) {\n  var _VToolbar$props;\n\n  return pick(props, Object.keys((_VToolbar$props = VToolbar == null ? void 0 : VToolbar.props) != null ? _VToolbar$props : {}));\n}","map":{"version":3,"mappings":"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","names":["VDefaultsProvider","VExpandTransition","VImg","VToolbarTitle","makeBorderProps","useBorder","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","provideDefaults","useBackgroundColor","useForwardRef","computed","ref","toRef","convertToUnit","genericComponent","pick","propsFactory","useRender","allowedDensities","makeVToolbarProps","absolute","Boolean","collapse","color","String","density","type","default","validator","v","includes","extended","extensionHeight","Number","flat","floating","height","image","title","tag","VToolbar","name","props","setup","slots","_ref","backgroundColorClasses","backgroundColorStyles","borderClasses","elevationClasses","roundedClasses","themeClasses","isExtended","extension","_slots$extension","contentHeight","parseInt","value","VBtn","variant","hasTitle","hasImage","_slots$extension2","cover","src","_slots$image","prepend","_slots$prepend","text","_slots$default","append","_slots$append","filterToolbarProps","Object","keys"],"sources":["../../../src/components/VToolbar/VToolbar.tsx"],"sourcesContent":["// Styles\nimport './VToolbar.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VExpandTransition } from '@/components/transitions'\nimport { VImg } from '@/components/VImg'\nimport { VToolbarTitle } from './VToolbarTitle'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useForwardRef } from '@/composables/forwardRef'\n\n// Utilities\nimport { computed, ref, toRef } from 'vue'\nimport { convertToUnit, genericComponent, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ExtractPropTypes, PropType } from 'vue'\nimport type { MakeSlots } from '@/util'\n\nexport type Density = typeof allowedDensities[number]\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'] as const\n\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String as PropType<Density>,\n    default: 'default',\n    validator: (v: any) => allowedDensities.includes(v),\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48,\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 56,\n  },\n  image: String,\n  title: String,\n\n  ...makeBorderProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'header' }),\n  ...makeThemeProps(),\n}, 'v-toolbar')\n\nexport const VToolbar = genericComponent<new () => {\n  $slots: MakeSlots<{\n    default: []\n    image: []\n    prepend: []\n    append: []\n    title: []\n    extension: []\n  }>\n}>()({\n  name: 'VToolbar',\n\n  props: makeVToolbarProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { borderClasses } = useBorder(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isExtended = ref(!!(props.extended || slots.extension?.()))\n    const contentHeight = computed(() => parseInt((\n      Number(props.height) +\n      (props.density === 'prominent' ? Number(props.height) : 0) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ), 10))\n    const extensionHeight = computed(() => isExtended.value\n      ? parseInt((\n        Number(props.extensionHeight) +\n        (props.density === 'prominent' ? Number(props.extensionHeight) : 0) -\n        (props.density === 'comfortable' ? 4 : 0) -\n        (props.density === 'compact' ? 8 : 0)\n      ), 10)\n      : 0\n    )\n\n    provideDefaults({\n      VBtn: {\n        variant: 'text',\n      },\n    })\n\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title)\n      const hasImage = !!(slots.image || props.image)\n\n      const extension = slots.extension?.()\n      isExtended.value = !!(props.extended || extension)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar',\n            {\n              'v-toolbar--absolute': props.absolute,\n              'v-toolbar--collapse': props.collapse,\n              'v-toolbar--flat': props.flat,\n              'v-toolbar--floating': props.floating,\n              [`v-toolbar--density-${props.density}`]: true,\n            },\n            backgroundColorClasses.value,\n            borderClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n          ]}\n        >\n          { hasImage && (\n            <div key=\"image\" class=\"v-toolbar__image\">\n              <VDefaultsProvider\n                defaults={{\n                  VImg: {\n                    cover: true,\n                    src: props.image,\n                  },\n                }}\n              >\n                { slots.image ? slots.image?.() : (<VImg />) }\n              </VDefaultsProvider>\n            </div>\n          ) }\n\n          <div\n            class=\"v-toolbar__content\"\n            style={{ height: convertToUnit(contentHeight.value) }}\n          >\n            { slots.prepend && (\n              <div class=\"v-toolbar__prepend\">\n                { slots.prepend?.() }\n              </div>\n            ) }\n\n            { hasTitle && (\n              <VToolbarTitle key=\"title\" text={ props.title }>\n                {{ text: slots.title }}\n              </VToolbarTitle>\n            ) }\n\n            { slots.default?.() }\n\n            { slots.append && (\n              <div class=\"v-toolbar__append\">\n                { slots.append?.() }\n              </div>\n            ) }\n          </div>\n\n          <VExpandTransition>\n            { isExtended.value && (\n              <div\n                class=\"v-toolbar__extension\"\n                style={{ height: convertToUnit(extensionHeight.value) }}\n              >\n                { extension }\n              </div>\n            ) }\n          </VExpandTransition>\n        </props.tag>\n      )\n    })\n\n    return useForwardRef({\n      contentHeight,\n      extensionHeight,\n    })\n  },\n})\n\nexport type VToolbar = InstanceType<typeof VToolbar>\n\nexport function filterToolbarProps (props: ExtractPropTypes<ReturnType<typeof makeVToolbarProps>>) {\n  return pick(props, Object.keys(VToolbar?.props ?? {}) as any)\n}\n"]},"metadata":{},"sourceType":"module"}