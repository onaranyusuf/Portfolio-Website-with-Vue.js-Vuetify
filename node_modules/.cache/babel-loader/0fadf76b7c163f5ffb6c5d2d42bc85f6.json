{"ast":null,"code":"export const singleOpenStrategy = {\n  open: _ref => {\n    let {\n      id,\n      value,\n      opened,\n      parents\n    } = _ref;\n\n    if (value) {\n      const newOpened = new Set();\n      newOpened.add(id);\n      let parent = parents.get(id);\n\n      while (parent != null) {\n        newOpened.add(parent);\n        parent = parents.get(parent);\n      }\n\n      return newOpened;\n    } else {\n      opened.delete(id);\n      return opened;\n    }\n  },\n  select: () => null\n};\nexport const multipleOpenStrategy = {\n  open: _ref2 => {\n    let {\n      id,\n      value,\n      opened,\n      parents\n    } = _ref2;\n\n    if (value) {\n      let parent = parents.get(id);\n      opened.add(id);\n\n      while (parent != null && parent !== id) {\n        opened.add(parent);\n        parent = parents.get(parent);\n      }\n\n      return opened;\n    } else {\n      opened.delete(id);\n    }\n\n    return opened;\n  },\n  select: () => null\n};\nexport const listOpenStrategy = {\n  open: multipleOpenStrategy.open,\n  select: _ref3 => {\n    let {\n      id,\n      value,\n      opened,\n      parents\n    } = _ref3;\n    if (!value) return opened;\n    const path = [];\n    let parent = parents.get(id);\n\n    while (parent != null) {\n      path.push(parent);\n      parent = parents.get(parent);\n    }\n\n    return new Set(path);\n  }\n};","map":{"version":3,"mappings":"AAwBA,OAAO,MAAMA,kBAAgC,GAAG;EAC9CC,IAAI,EAAEC,QAAoC;IAAA,IAAnC;MAAEC,EAAF;MAAMC,KAAN;MAAaC,MAAb;MAAqBC;IAArB,IAAmCJ;;IACxC,IAAIE,KAAJ,EAAW;MACT,MAAMG,SAAS,GAAG,IAAIC,GAAJ,EAAlB;MACAD,SAAS,CAACE,GAAVF,CAAcJ,EAAdI;MAEA,IAAIG,MAAM,GAAGJ,OAAO,CAACK,GAARL,CAAYH,EAAZG,CAAb;;MAEA,OAAOI,MAAM,IAAI,IAAjB,EAAuB;QACrBH,SAAS,CAACE,GAAVF,CAAcG,MAAdH;QACAG,MAAM,GAAGJ,OAAO,CAACK,GAARL,CAAYI,MAAZJ,CAATI;MACD;;MAED,OAAOH,SAAP;IAXF,OAYO;MACLF,MAAM,CAACO,MAAPP,CAAcF,EAAdE;MACA,OAAOA,MAAP;IACD;EAjB2C;EAmB9CQ,MAAM,EAAE,MAAM;AAnBgC,CAAzC;AAsBP,OAAO,MAAMC,oBAAkC,GAAG;EAChDb,IAAI,EAAEc,SAAoC;IAAA,IAAnC;MAAEZ,EAAF;MAAMC,KAAN;MAAaC,MAAb;MAAqBC;IAArB,IAAmCS;;IACxC,IAAIX,KAAJ,EAAW;MACT,IAAIM,MAAM,GAAGJ,OAAO,CAACK,GAARL,CAAYH,EAAZG,CAAb;MACAD,MAAM,CAACI,GAAPJ,CAAWF,EAAXE;;MAEA,OAAOK,MAAM,IAAI,IAAVA,IAAkBA,MAAM,KAAKP,EAApC,EAAwC;QACtCE,MAAM,CAACI,GAAPJ,CAAWK,MAAXL;QACAK,MAAM,GAAGJ,OAAO,CAACK,GAARL,CAAYI,MAAZJ,CAATI;MACD;;MAED,OAAOL,MAAP;IATF,OAUO;MACLA,MAAM,CAACO,MAAPP,CAAcF,EAAdE;IACD;;IACD,OAAOA,MAAP;EAf8C;EAiBhDQ,MAAM,EAAE,MAAM;AAjBkC,CAA3C;AAoBP,OAAO,MAAMG,gBAA8B,GAAG;EAC5Cf,IAAI,EAAEa,oBAAoB,CAACb,IADiB;EAE5CY,MAAM,EAAEI,SAAoC;IAAA,IAAnC;MAAEd,EAAF;MAAMC,KAAN;MAAaC,MAAb;MAAqBC;IAArB,IAAmCW;IAC1C,IAAI,CAACb,KAAL,EAAY,OAAOC,MAAP;IAEZ,MAAMa,IAAc,GAAG,EAAvB;IAEA,IAAIR,MAAM,GAAGJ,OAAO,CAACK,GAARL,CAAYH,EAAZG,CAAb;;IAEA,OAAOI,MAAM,IAAI,IAAjB,EAAuB;MACrBQ,IAAI,CAACC,IAALD,CAAUR,MAAVQ;MACAR,MAAM,GAAGJ,OAAO,CAACK,GAARL,CAAYI,MAAZJ,CAATI;IACD;;IAED,OAAO,IAAIF,GAAJ,CAAQU,IAAR,CAAP;EACD;AAf2C,CAAvC","names":["singleOpenStrategy","open","_ref","id","value","opened","parents","newOpened","Set","add","parent","get","delete","select","multipleOpenStrategy","_ref2","listOpenStrategy","_ref3","path","push"],"sources":["../../../src/composables/nested/openStrategies.ts"],"sourcesContent":["export type OpenStrategyFn = (data: {\n  id: string\n  value: boolean\n  opened: Set<string>\n  children: Map<string, string[]>\n  parents: Map<string, string>\n  event?: Event\n}) => Set<string>\n\nexport type OpenSelectStrategyFn = (data: {\n  id: string\n  value: boolean\n  opened: Set<string>\n  selected: Map<string, 'on' | 'off' | 'indeterminate'>\n  children: Map<string, string[]>\n  parents: Map<string, string>\n  event?: Event\n}) => Set<string> | null\n\nexport type OpenStrategy = {\n  open: OpenStrategyFn\n  select: OpenSelectStrategyFn\n}\n\nexport const singleOpenStrategy: OpenStrategy = {\n  open: ({ id, value, opened, parents }) => {\n    if (value) {\n      const newOpened = new Set<string>()\n      newOpened.add(id)\n\n      let parent = parents.get(id)\n\n      while (parent != null) {\n        newOpened.add(parent)\n        parent = parents.get(parent)\n      }\n\n      return newOpened\n    } else {\n      opened.delete(id)\n      return opened\n    }\n  },\n  select: () => null,\n}\n\nexport const multipleOpenStrategy: OpenStrategy = {\n  open: ({ id, value, opened, parents }) => {\n    if (value) {\n      let parent = parents.get(id)\n      opened.add(id)\n\n      while (parent != null && parent !== id) {\n        opened.add(parent)\n        parent = parents.get(parent)\n      }\n\n      return opened\n    } else {\n      opened.delete(id)\n    }\n    return opened\n  },\n  select: () => null,\n}\n\nexport const listOpenStrategy: OpenStrategy = {\n  open: multipleOpenStrategy.open,\n  select: ({ id, value, opened, parents }) => {\n    if (!value) return opened\n\n    const path: string[] = []\n\n    let parent = parents.get(id)\n\n    while (parent != null) {\n      path.push(parent)\n      parent = parents.get(parent)\n    }\n\n    return new Set(path)\n  },\n}\n"]},"metadata":{},"sourceType":"module"}