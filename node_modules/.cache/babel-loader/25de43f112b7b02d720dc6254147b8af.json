{"ast":null,"code":"import { effectScope, watch } from 'vue';\nexport function useToggleScope(source, cb) {\n  let scope;\n  watch(source, active => {\n    if (active && !scope) {\n      scope = effectScope();\n      scope.run(cb);\n    } else {\n      var _scope;\n\n      (_scope = scope) == null ? void 0 : _scope.stop();\n      scope = undefined;\n    }\n  }, {\n    immediate: true\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,EAAsBC,KAAtB,QAAmC,KAAnC;AAGA,OAAO,SAASC,cAAT,CAAyBC,MAAzB,EAAuDC,EAAvD,EAAuE;EAC5E,IAAIC,KAAJ;EACAJ,KAAK,CAACE,MAAD,EAASG,MAAM,IAAI;IACtB,IAAIA,MAAM,IAAI,CAACD,KAAf,EAAsB;MACpBA,KAAK,GAAGL,WAAW,EAAnBK;MACAA,KAAK,CAACE,GAANF,CAAUD,EAAVC;IAFF,OAGO;MAAA;;MACL,oBAAK,IAAL,mBAAOG,IAAP;MACAH,KAAK,GAAGI,SAARJ;IACD;EAPE,GAQF;IAAEK,SAAS,EAAE;EAAb,CARE,CAALT;AASD","names":["effectScope","watch","useToggleScope","source","cb","scope","active","run","stop","undefined","immediate"],"sources":["../../src/composables/toggleScope.ts"],"sourcesContent":["import { effectScope, watch } from 'vue'\nimport type { EffectScope, WatchSource } from 'vue'\n\nexport function useToggleScope (source: WatchSource<boolean>, cb: () => void) {\n  let scope: EffectScope | undefined\n  watch(source, active => {\n    if (active && !scope) {\n      scope = effectScope()\n      scope.run(cb)\n    } else {\n      scope?.stop()\n      scope = undefined\n    }\n  }, { immediate: true })\n}\n"]},"metadata":{},"sourceType":"module"}