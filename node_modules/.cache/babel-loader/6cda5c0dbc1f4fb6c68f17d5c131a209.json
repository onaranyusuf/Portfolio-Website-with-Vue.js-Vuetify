{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VSlideGroup.css\"; // Components\n\nimport { VFadeTransition } from \"../transitions/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\n\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useDisplay } from \"../../composables/index.mjs\";\nimport { useResizeObserver } from \"../../composables/resizeObserver.mjs\";\nimport { useRtl } from \"../../composables/rtl.mjs\"; // Utilities\n\nimport { bias, calculateCenteredOffset, calculateUpdatedOffset } from \"./helpers.mjs\";\nimport { clamp, defineComponent, IN_BROWSER, useRender } from \"../../util/index.mjs\";\nimport { computed, ref, watch } from 'vue'; // Types\n\nexport const VSlideGroupSymbol = Symbol.for('vuetify:v-slide-group');\nexport const VSlideGroup = defineComponent({\n  name: 'VSlideGroup',\n  props: {\n    centerActive: Boolean,\n    direction: {\n      type: String,\n      default: 'horizontal'\n    },\n    symbol: {\n      type: null,\n      default: VSlideGroupSymbol\n    },\n    nextIcon: {\n      type: IconValue,\n      default: '$next'\n    },\n    prevIcon: {\n      type: IconValue,\n      default: '$prev'\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => typeof v === 'boolean' || ['always', 'desktop', 'mobile'].includes(v)\n    },\n    ...makeTagProps(),\n    ...makeGroupProps({\n      selectedClass: 'v-slide-group-item--active'\n    })\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      isRtl\n    } = useRtl();\n    const {\n      mobile\n    } = useDisplay();\n    const group = useGroup(props, props.symbol);\n    const isOverflowing = ref(false);\n    const scrollOffset = ref(0);\n    const containerSize = ref(0);\n    const contentSize = ref(0);\n    const isHorizontal = computed(() => props.direction === 'horizontal');\n    const {\n      resizeRef: containerRef,\n      contentRect: containerRect\n    } = useResizeObserver();\n    const {\n      resizeRef: contentRef,\n      contentRect\n    } = useResizeObserver();\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1;\n      return group.items.value.findIndex(item => item.id === group.selected.value[0]);\n    });\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1;\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1]);\n    });\n\n    if (IN_BROWSER) {\n      let frame = -1;\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame);\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height';\n            containerSize.value = containerRect.value[sizeProperty];\n            contentSize.value = contentRect.value[sizeProperty];\n            isOverflowing.value = containerSize.value + 1 < contentSize.value;\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.value) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.value.children[lastSelectedIndex.value];\n\n            if (firstSelectedIndex.value === 0 || !isOverflowing.value) {\n              scrollOffset.value = 0;\n            } else if (props.centerActive) {\n              scrollOffset.value = calculateCenteredOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                isHorizontal: isHorizontal.value\n              });\n            } else if (isOverflowing.value) {\n              scrollOffset.value = calculateUpdatedOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                currentScrollOffset: scrollOffset.value,\n                isHorizontal: isHorizontal.value\n              });\n            }\n          }\n        });\n      });\n    }\n\n    const disableTransition = ref(false);\n    let startTouch = 0;\n    let startOffset = 0;\n\n    function onTouchstart(e) {\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY';\n      startOffset = scrollOffset.value;\n      startTouch = e.touches[0][sizeProperty];\n      disableTransition.value = true;\n    }\n\n    function onTouchmove(e) {\n      if (!isOverflowing.value) return;\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY';\n      scrollOffset.value = startOffset + startTouch - e.touches[0][sizeProperty];\n    }\n\n    function onTouchend(e) {\n      const maxScrollOffset = contentSize.value - containerSize.value;\n\n      if (isRtl.value) {\n        if (scrollOffset.value > 0 || !isOverflowing.value) {\n          scrollOffset.value = 0;\n        } else if (scrollOffset.value <= -maxScrollOffset) {\n          scrollOffset.value = -maxScrollOffset;\n        }\n      } else {\n        if (scrollOffset.value < 0 || !isOverflowing.value) {\n          scrollOffset.value = 0;\n        } else if (scrollOffset.value >= maxScrollOffset) {\n          scrollOffset.value = maxScrollOffset;\n        }\n      }\n\n      disableTransition.value = false;\n    }\n\n    function onScroll() {\n      containerRef.value && (containerRef.value.scrollLeft = 0);\n    }\n\n    const isFocused = ref(false);\n\n    function onFocusin(e) {\n      isFocused.value = true;\n      if (!isOverflowing.value || !contentRef.value) return; // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.value.children) {\n          if (item === el) {\n            scrollOffset.value = calculateUpdatedOffset({\n              selectedElement: item,\n              containerSize: containerSize.value,\n              contentSize: contentSize.value,\n              isRtl: isRtl.value,\n              currentScrollOffset: scrollOffset.value,\n              isHorizontal: isHorizontal.value\n            });\n            return;\n          }\n        }\n      }\n    }\n\n    function onFocusout(e) {\n      isFocused.value = false;\n    }\n\n    function onFocus(e) {\n      var _contentRef$value;\n\n      if (!isFocused.value && !(e.relatedTarget && (_contentRef$value = contentRef.value) != null && _contentRef$value.contains(e.relatedTarget))) focus();\n    }\n\n    function onKeydown(e) {\n      if (!contentRef.value) return;\n\n      if (e.key === (isHorizontal.value ? 'ArrowRight' : 'ArrowDown')) {\n        focus('next');\n      } else if (e.key === (isHorizontal.value ? 'ArrowLeft' : 'ArrowUp')) {\n        focus('prev');\n      } else if (e.key === 'Home') {\n        focus('first');\n      } else if (e.key === 'End') {\n        focus('last');\n      }\n    }\n\n    function focus(location) {\n      if (!contentRef.value) return;\n\n      if (!location) {\n        var _focusable$;\n\n        contentRef.value.querySelector('[tabindex]');\n        const focusable = [...contentRef.value.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')].filter(el => !el.hasAttribute('disabled'));\n        (_focusable$ = focusable[0]) == null ? void 0 : _focusable$.focus();\n      } else if (location === 'next') {\n        var _contentRef$value$que;\n\n        const el = (_contentRef$value$que = contentRef.value.querySelector(':focus')) == null ? void 0 : _contentRef$value$que.nextElementSibling;\n        if (el) el.focus();else focus('first');\n      } else if (location === 'prev') {\n        var _contentRef$value$que2;\n\n        const el = (_contentRef$value$que2 = contentRef.value.querySelector(':focus')) == null ? void 0 : _contentRef$value$que2.previousElementSibling;\n        if (el) el.focus();else focus('last');\n      } else if (location === 'first') {\n        var _contentRef$value$fir;\n\n        (_contentRef$value$fir = contentRef.value.firstElementChild) == null ? void 0 : _contentRef$value$fir.focus();\n      } else if (location === 'last') {\n        var _contentRef$value$las;\n\n        (_contentRef$value$las = contentRef.value.lastElementChild) == null ? void 0 : _contentRef$value$las.focus();\n      }\n    }\n\n    function scrollTo(location) {\n      const sign = isRtl.value ? -1 : 1;\n      const newAbosluteOffset = sign * scrollOffset.value + (location === 'prev' ? -1 : 1) * containerSize.value;\n      scrollOffset.value = sign * clamp(newAbosluteOffset, 0, contentSize.value - containerSize.value);\n    }\n\n    const contentStyles = computed(() => {\n      const scrollAmount = scrollOffset.value <= 0 ? bias(-scrollOffset.value) : scrollOffset.value > contentSize.value - containerSize.value ? -(contentSize.value - containerSize.value) + bias(contentSize.value - containerSize.value - scrollOffset.value) : -scrollOffset.value;\n      return {\n        transform: `translate${isHorizontal.value ? 'X' : 'Y'}(${scrollAmount}px)`,\n        transition: disableTransition.value ? 'none' : '',\n        willChange: disableTransition.value ? 'transform' : ''\n      };\n    });\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected\n    }));\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always':\n          return true;\n        // Always show arrows on desktop\n\n        case 'desktop':\n          return !mobile.value;\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n\n        case true:\n          return isOverflowing.value || Math.abs(scrollOffset.value) > 0;\n        // Always show on mobile\n\n        case 'mobile':\n          return mobile.value || isOverflowing.value || Math.abs(scrollOffset.value) > 0;\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n\n        default:\n          return !mobile.value && (isOverflowing.value || Math.abs(scrollOffset.value) > 0);\n      }\n    });\n    const hasPrev = computed(() => {\n      return hasAffixes.value && scrollOffset.value > 0;\n    });\n    const hasNext = computed(() => {\n      if (!hasAffixes.value) return false; // Check one scroll ahead to know the width of right-most item\n\n      return contentSize.value > Math.abs(scrollOffset.value) + containerSize.value;\n    });\n    useRender(() => {\n      var _slots$prev, _slots$prev2, _slots$default, _slots$next, _slots$next2;\n\n      return _createVNode(props.tag, {\n        \"class\": ['v-slide-group', {\n          'v-slide-group--vertical': !isHorizontal.value,\n          'v-slide-group--has-affixes': hasAffixes.value,\n          'v-slide-group--is-overflowing': isOverflowing.value\n        }],\n        \"tabindex\": isFocused.value || group.selected.value.length ? -1 : 0,\n        \"onFocus\": onFocus\n      }, {\n        default: () => [hasAffixes.value && _createVNode(\"div\", {\n          \"key\": \"prev\",\n          \"class\": ['v-slide-group__prev', {\n            'v-slide-group__prev--disabled': !hasPrev.value\n          }],\n          \"onClick\": () => scrollTo('prev')\n        }, [(_slots$prev = (_slots$prev2 = slots.prev) == null ? void 0 : _slots$prev2.call(slots, slotProps.value)) != null ? _slots$prev : _createVNode(VFadeTransition, null, {\n          default: () => [_createVNode(VIcon, {\n            \"icon\": props.prevIcon\n          }, null)]\n        })]), _createVNode(\"div\", {\n          \"key\": \"container\",\n          \"ref\": containerRef,\n          \"class\": \"v-slide-group__container\",\n          \"onScroll\": onScroll\n        }, [_createVNode(\"div\", {\n          \"ref\": contentRef,\n          \"class\": \"v-slide-group__content\",\n          \"style\": contentStyles.value,\n          \"onTouchstartPassive\": onTouchstart,\n          \"onTouchmovePassive\": onTouchmove,\n          \"onTouchendPassive\": onTouchend,\n          \"onFocusin\": onFocusin,\n          \"onFocusout\": onFocusout,\n          \"onKeydown\": onKeydown\n        }, [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, slotProps.value)])]), hasAffixes.value && _createVNode(\"div\", {\n          \"key\": \"next\",\n          \"class\": ['v-slide-group__next', {\n            'v-slide-group__next--disabled': !hasNext.value\n          }],\n          \"onClick\": () => scrollTo('next')\n        }, [(_slots$next = (_slots$next2 = slots.next) == null ? void 0 : _slots$next2.call(slots, slotProps.value)) != null ? _slots$next : _createVNode(VFadeTransition, null, {\n          default: () => [_createVNode(VIcon, {\n            \"icon\": props.nextIcon\n          }, null)]\n        })])]\n      });\n    });\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VFadeTransition","VIcon","IconValue","makeGroupProps","useGroup","makeTagProps","useDisplay","useResizeObserver","useRtl","bias","calculateCenteredOffset","calculateUpdatedOffset","clamp","defineComponent","IN_BROWSER","useRender","computed","ref","watch","VSlideGroupSymbol","Symbol","for","VSlideGroup","name","props","centerActive","Boolean","direction","type","String","default","symbol","nextIcon","prevIcon","showArrows","validator","v","includes","selectedClass","emits","value","setup","slots","_ref","isRtl","mobile","group","isOverflowing","scrollOffset","containerSize","contentSize","isHorizontal","resizeRef","containerRef","contentRect","containerRect","contentRef","firstSelectedIndex","selected","length","items","findIndex","item","id","lastSelectedIndex","frame","cancelAnimationFrame","requestAnimationFrame","sizeProperty","selectedElement","children","currentScrollOffset","disableTransition","startTouch","startOffset","onTouchstart","e","touches","onTouchmove","onTouchend","maxScrollOffset","onScroll","scrollLeft","isFocused","onFocusin","el","composedPath","onFocusout","onFocus","relatedTarget","_contentRef$value","contains","focus","onKeydown","key","location","querySelector","focusable","querySelectorAll","filter","hasAttribute","_contentRef$value$que","nextElementSibling","_contentRef$value$que2","previousElementSibling","firstElementChild","lastElementChild","scrollTo","sign","newAbosluteOffset","contentStyles","scrollAmount","transform","transition","willChange","slotProps","next","prev","select","isSelected","hasAffixes","Math","abs","hasPrev","hasNext","_slots$prev2","_slots$default","_slots$next2"],"sources":["../../../src/components/VSlideGroup/VSlideGroup.tsx"],"sourcesContent":["// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { useDisplay } from '@/composables'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { useRtl } from '@/composables/rtl'\n\n// Utilities\nimport { bias, calculateCenteredOffset, calculateUpdatedOffset } from './helpers'\nimport { clamp, defineComponent, IN_BROWSER, useRender } from '@/util'\nimport { computed, ref, watch } from 'vue'\n\n// Types\nimport type { GroupProvide } from '@/composables/group'\nimport type { InjectionKey } from 'vue'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\nexport const VSlideGroup = defineComponent({\n  name: 'VSlideGroup',\n\n  props: {\n    centerActive: Boolean,\n    direction: {\n      type: String,\n      default: 'horizontal',\n    },\n    symbol: {\n      type: null,\n      default: VSlideGroupSymbol,\n    },\n    nextIcon: {\n      type: IconValue,\n      default: '$next',\n    },\n    prevIcon: {\n      type: IconValue,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: (v: any) => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n\n    ...makeTagProps(),\n    ...makeGroupProps({\n      selectedClass: 'v-slide-group-item--active',\n    }),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { mobile } = useDisplay()\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = ref(false)\n    const scrollOffset = ref(0)\n    const containerSize = ref(0)\n    const contentSize = ref(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.value) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.value.children[lastSelectedIndex.value] as HTMLElement\n\n            if (firstSelectedIndex.value === 0 || !isOverflowing.value) {\n              scrollOffset.value = 0\n            } else if (props.centerActive) {\n              scrollOffset.value = calculateCenteredOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                isHorizontal: isHorizontal.value,\n              })\n            } else if (isOverflowing.value) {\n              scrollOffset.value = calculateUpdatedOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                currentScrollOffset: scrollOffset.value,\n                isHorizontal: isHorizontal.value,\n              })\n            }\n          }\n        })\n      })\n    }\n\n    const disableTransition = ref(false)\n\n    let startTouch = 0\n    let startOffset = 0\n\n    function onTouchstart (e: TouchEvent) {\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      startOffset = scrollOffset.value\n      startTouch = e.touches[0][sizeProperty]\n      disableTransition.value = true\n    }\n\n    function onTouchmove (e: TouchEvent) {\n      if (!isOverflowing.value) return\n\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      scrollOffset.value = startOffset + startTouch - e.touches[0][sizeProperty]\n    }\n\n    function onTouchend (e: TouchEvent) {\n      const maxScrollOffset = contentSize.value - containerSize.value\n\n      if (isRtl.value) {\n        if (scrollOffset.value > 0 || !isOverflowing.value) {\n          scrollOffset.value = 0\n        } else if (scrollOffset.value <= -maxScrollOffset) {\n          scrollOffset.value = -maxScrollOffset\n        }\n      } else {\n        if (scrollOffset.value < 0 || !isOverflowing.value) {\n          scrollOffset.value = 0\n        } else if (scrollOffset.value >= maxScrollOffset) {\n          scrollOffset.value = maxScrollOffset\n        }\n      }\n\n      disableTransition.value = false\n    }\n\n    function onScroll () {\n      containerRef.value && (containerRef.value.scrollLeft = 0)\n    }\n\n    const isFocused = ref(false)\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.value) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.value.children) {\n          if (item === el) {\n            scrollOffset.value = calculateUpdatedOffset({\n              selectedElement: item as HTMLElement,\n              containerSize: containerSize.value,\n              contentSize: contentSize.value,\n              isRtl: isRtl.value,\n              currentScrollOffset: scrollOffset.value,\n              isHorizontal: isHorizontal.value,\n            })\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.value) return\n\n      if (e.key === (isHorizontal.value ? 'ArrowRight' : 'ArrowDown')) {\n        focus('next')\n      } else if (e.key === (isHorizontal.value ? 'ArrowLeft' : 'ArrowUp')) {\n        focus('prev')\n      } else if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.value) return\n\n      if (!location) {\n        contentRef.value.querySelector('[tabindex]')\n        const focusable = [...contentRef.value.querySelectorAll(\n          'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        )].filter(el => !el.hasAttribute('disabled')) as HTMLElement[]\n        focusable[0]?.focus()\n      } else if (location === 'next') {\n        const el = contentRef.value.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('first')\n      } else if (location === 'prev') {\n        const el = contentRef.value.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('last')\n      } else if (location === 'first') {\n        (contentRef.value.firstElementChild as HTMLElement)?.focus()\n      } else if (location === 'last') {\n        (contentRef.value.lastElementChild as HTMLElement)?.focus()\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const sign = isRtl.value ? -1 : 1\n      const newAbosluteOffset = sign * scrollOffset.value +\n        (location === 'prev' ? -1 : 1) * containerSize.value\n\n      scrollOffset.value = sign * clamp(newAbosluteOffset, 0, contentSize.value - containerSize.value)\n    }\n\n    const contentStyles = computed(() => {\n      const scrollAmount = scrollOffset.value <= 0\n        ? bias(-scrollOffset.value)\n        : scrollOffset.value > contentSize.value - containerSize.value\n          ? -(contentSize.value - containerSize.value) + bias(contentSize.value - containerSize.value - scrollOffset.value)\n          : -scrollOffset.value\n\n      return {\n        transform: `translate${isHorizontal.value ? 'X' : 'Y'}(${scrollAmount}px)`,\n        transition: disableTransition.value ? 'none' : '',\n        willChange: disableTransition.value ? 'transform' : '',\n      }\n    })\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      return hasAffixes.value && scrollOffset.value > 0\n    })\n\n    const hasNext = computed(() => {\n      if (!hasAffixes.value) return false\n\n      // Check one scroll ahead to know the width of right-most item\n      return contentSize.value > Math.abs(scrollOffset.value) + containerSize.value\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n        ]}\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onClick={ () => scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ props.prevIcon }></VIcon>\n              </VFadeTransition>\n            ) }\n          </div>\n        ) }\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            style={ contentStyles.value }\n            onTouchstartPassive={ onTouchstart }\n            onTouchmovePassive={ onTouchmove }\n            onTouchendPassive={ onTouchend }\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onClick={ () => scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ props.nextIcon }></VIcon>\n              </VFadeTransition>\n            ) }\n          </div>\n        ) }\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n"]},"metadata":{},"sourceType":"module"}