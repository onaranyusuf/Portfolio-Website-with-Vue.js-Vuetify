{"ast":null,"code":"// Utilities\nimport { computed } from 'vue';\nimport { getPropertyFromItem, pick, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\n\nexport const makeItemsProps = propsFactory({\n  items: {\n    type: Array,\n    default: () => []\n  },\n  itemTitle: {\n    type: [String, Array, Function],\n    default: 'title'\n  },\n  itemValue: {\n    type: [String, Array, Function],\n    default: 'value'\n  },\n  itemChildren: {\n    type: [Boolean, String, Array, Function],\n    default: 'children'\n  },\n  itemProps: {\n    type: [Boolean, String, Array, Function],\n    default: 'props'\n  },\n  returnObject: Boolean\n}, 'item');\nexport function transformItem(props, item) {\n  const title = getPropertyFromItem(item, props.itemTitle, item);\n  const value = getPropertyFromItem(item, props.itemValue, title);\n  const children = getPropertyFromItem(item, props.itemChildren);\n  const itemProps = props.itemProps === true ? pick(item, ['children'])[1] : getPropertyFromItem(item, props.itemProps);\n  const _props = {\n    title,\n    value,\n    ...itemProps\n  };\n  return {\n    title: _props.title,\n    value: _props.value,\n    props: _props,\n    children: Array.isArray(children) ? transformItems(props, children) : undefined,\n    raw: item\n  };\n}\nexport function transformItems(props, items) {\n  const array = [];\n\n  for (const item of items) {\n    array.push(transformItem(props, item));\n  }\n\n  return array;\n}\nexport function useItems(props) {\n  const items = computed(() => transformItems(props, props.items));\n\n  function transformIn(value) {\n    return value.map(item => transformItem(props, item));\n  }\n\n  function transformOut(value) {\n    if (props.returnObject) return value.map(_ref => {\n      let {\n        raw: item\n      } = _ref;\n      return item;\n    });\n    return value.map(_ref2 => {\n      let {\n        props\n      } = _ref2;\n      return props.value;\n    });\n  }\n\n  return {\n    items,\n    transformIn,\n    transformOut\n  };\n}","map":{"version":3,"mappings":"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","names":["computed","getPropertyFromItem","pick","propsFactory","makeItemsProps","items","type","Array","default","itemTitle","String","Function","itemValue","itemChildren","Boolean","itemProps","returnObject","transformItem","props","item","title","value","children","_props","isArray","transformItems","undefined","raw","array","push","useItems","transformIn","map","transformOut","_ref","_ref2"],"sources":["../../src/composables/items.ts"],"sourcesContent":["// Utilities\nimport { computed } from 'vue'\nimport { getPropertyFromItem, pick, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { SelectItemKey } from '@/util'\n\nexport interface InternalItem {\n  title: string\n  value: any\n  props: {\n    [key: string]: any\n    title: string\n    value: any\n  }\n  children?: InternalItem[]\n  raw: any\n}\n\nexport interface ItemProps {\n  items: any[]\n  itemTitle: SelectItemKey\n  itemValue: SelectItemKey\n  itemChildren: SelectItemKey\n  itemProps: SelectItemKey\n  returnObject: boolean\n}\n\n// Composables\nexport const makeItemsProps = propsFactory({\n  items: {\n    type: Array as PropType<ItemProps['items']>,\n    default: () => ([]),\n  },\n  itemTitle: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'title',\n  },\n  itemValue: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'value',\n  },\n  itemChildren: {\n    type: [Boolean, String, Array, Function] as PropType<SelectItemKey>,\n    default: 'children',\n  },\n  itemProps: {\n    type: [Boolean, String, Array, Function] as PropType<SelectItemKey>,\n    default: 'props',\n  },\n  returnObject: Boolean,\n}, 'item')\n\nexport function transformItem (props: Omit<ItemProps, 'items'>, item: any) {\n  const title = getPropertyFromItem(item, props.itemTitle, item)\n  const value = getPropertyFromItem(item, props.itemValue, title)\n  const children = getPropertyFromItem(item, props.itemChildren)\n  const itemProps = props.itemProps === true ? pick(item, ['children'])[1] : getPropertyFromItem(item, props.itemProps)\n\n  const _props = {\n    title,\n    value,\n    ...itemProps,\n  }\n\n  return {\n    title: _props.title,\n    value: _props.value,\n    props: _props,\n    children: Array.isArray(children) ? transformItems(props, children) : undefined,\n    raw: item,\n  }\n}\n\nexport function transformItems (props: Omit<ItemProps, 'items'>, items: ItemProps['items']) {\n  const array: InternalItem[] = []\n\n  for (const item of items) {\n    array.push(transformItem(props, item))\n  }\n\n  return array\n}\n\nexport function useItems (props: ItemProps) {\n  const items = computed(() => transformItems(props, props.items))\n\n  function transformIn (value: any[]): InternalItem[] {\n    return value.map(item => transformItem(props, item))\n  }\n\n  function transformOut (value: InternalItem[]) {\n    if (props.returnObject) return value.map(({ raw: item }) => item)\n    return value.map(({ props }) => props.value)\n  }\n\n  return { items, transformIn, transformOut }\n}\n"]},"metadata":{},"sourceType":"module"}