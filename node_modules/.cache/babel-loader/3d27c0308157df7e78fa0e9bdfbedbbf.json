{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\"; // Styles\n\nimport \"./VMenu.css\"; // Components\n\nimport { VOverlay } from \"../VOverlay/index.mjs\";\nimport { VDialogTransition } from \"../transitions/index.mjs\"; // Composables\n\nimport { makeTransitionProps } from \"../../composables/transition.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\n\nimport { computed, inject, provide, ref, watch } from 'vue';\nimport { genericComponent, getUid, useRender } from \"../../util/index.mjs\";\nimport { VMenuSymbol } from \"./shared.mjs\"; // Types\n\nimport { useForwardRef } from \"../../composables/forwardRef.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\";\nexport const VMenu = genericComponent()({\n  name: 'VMenu',\n  inheritAttrs: false,\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    modelValue: Boolean,\n    id: String,\n    ...makeTransitionProps({\n      transition: {\n        component: VDialogTransition\n      }\n    })\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      scopeId\n    } = useScopeId();\n    const uid = getUid();\n    const id = computed(() => props.id || `v-menu-${uid}`);\n    const overlay = ref();\n    const parent = inject(VMenuSymbol, null);\n    let openChildren = 0;\n    provide(VMenuSymbol, {\n      register() {\n        ++openChildren;\n      },\n\n      unregister() {\n        --openChildren;\n      },\n\n      closeParents() {\n        setTimeout(() => {\n          if (!openChildren) {\n            isActive.value = false;\n            parent == null ? void 0 : parent.closeParents();\n          }\n        }, 40);\n      }\n\n    });\n    watch(isActive, val => {\n      val ? parent == null ? void 0 : parent.register() : parent == null ? void 0 : parent.unregister();\n    });\n\n    function onClickOutside() {\n      parent == null ? void 0 : parent.closeParents();\n    }\n\n    useRender(() => _createVNode(VOverlay, _mergeProps({\n      \"ref\": overlay,\n      \"modelValue\": isActive.value,\n      \"onUpdate:modelValue\": $event => isActive.value = $event,\n      \"class\": ['v-menu'],\n      \"transition\": props.transition,\n      \"absolute\": true,\n      \"closeOnContentClick\": true,\n      \"locationStrategy\": \"connected\",\n      \"scrollStrategy\": \"reposition\",\n      \"scrim\": false,\n      \"openDelay\": \"300\",\n      \"closeDelay\": \"250\",\n      \"activatorProps\": {\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value\n      },\n      \"onClick:outside\": onClickOutside\n    }, scopeId, attrs), {\n      default: slots.default,\n      activator: slots.activator\n    }));\n    return useForwardRef({\n      id\n    }, overlay);\n  }\n\n});","map":{"version":3,"mappings":"qHAAA;;AACA,qB,CAEA;;SACSA,gB;SACAC,yB,4BAET;;SACSC,2B;SACAC,uB,sCAET;;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,GAApC,EAAyCC,KAAzC,QAAsD,KAAtD;SACSC,kBAAkBC,QAAQC,iB;SAC1BC,mB,gBAET;;SAESC,qB;SACAC,kB;AAET,OAAO,MAAMC,KAAK,GAAGN,gBAAgB,GAEhC;EACHO,IAAI,EAAE,OADH;EAGHC,YAAY,EAAE,KAHX;EAKHC,KAAK,EAAE;IACL;IACA;IACAC,UAAU,EAAEC,OAHP;IAILC,EAAE,EAAEC,MAJC;IAML,GAAGpB,mBAAmB,CAAC;MACrBqB,UAAU,EAAE;QAAEC,SAAS,EAAEvB;MAAb;IADS,CAAD;EANjB,CALJ;EAgBHwB,KAAK,EAAE;IACL,qBAAsBC,KAAD,IAAoB;EADpC,CAhBJ;;EAoBHC,KAAK,CAAET,KAAF,QAA2B;IAAA,IAAlB;MAAEU,KAAF;MAASC;IAAT,IAAkBC;IAC9B,MAAMC,QAAQ,GAAG5B,eAAe,CAACe,KAAD,EAAQ,YAAR,CAAhC;IACA,MAAM;MAAEc;IAAF,IAAclB,UAAU,EAA9B;IAEA,MAAMmB,GAAG,GAAGvB,MAAM,EAAlB;IACA,MAAMW,EAAE,GAAGjB,QAAQ,CAAC,MAAMc,KAAK,CAACG,EAANH,IAAa,UAASe,GAAI,EAAjC,CAAnB;IAEA,MAAMC,OAAO,GAAG3B,GAAG,EAAnB;IAEA,MAAM4B,MAAM,GAAG9B,MAAM,CAACO,WAAD,EAAc,IAAd,CAArB;IACA,IAAIwB,YAAY,GAAG,CAAnB;IACA9B,OAAO,CAACM,WAAD,EAAc;MACnByB,QAAQ,GAAI;QACV,EAAED,YAAF;MAFiB;;MAInBE,UAAU,GAAI;QACZ,EAAEF,YAAF;MALiB;;MAOnBG,YAAY,GAAI;QACdC,UAAU,CAAC,MAAM;UACf,IAAI,CAACJ,YAAL,EAAmB;YACjBL,QAAQ,CAACL,KAATK,GAAiB,KAAjBA;YACAI,MAAM,QAANA,kBAAM,CAAEI,YAARJ;UACD;QAJO,GAKP,EALO,CAAVK;MAMD;;IAdkB,CAAd,CAAPlC;IAiBAE,KAAK,CAACuB,QAAD,EAAWU,GAAG,IAAI;MACrBA,GAAG,GAAGN,MAAH,QAAGA,GAAH,MAAGA,SAAM,CAAEE,QAARF,EAAH,GAAwBA,MAAxB,QAAwBA,GAAxB,MAAwBA,SAAM,CAAEG,UAARH,EAA3BM;IADG,EAALjC;;IAIA,SAASkC,cAAT,GAA2B;MACzBP,MAAM,QAANA,kBAAM,CAAEI,YAARJ;IACD;;IAEDxB,SAAS,CAAC;MAAA,OAEAuB,OAFA;MAAA,cAGIH,QAAQ,CAACL,KAHb;MAAA,iCAGIK,QAAQ,CAACL,KAATK,GAHJY;MAAA,SAIC,CACL,QADK,CAJD;MAAA,cAOOzB,KAAK,CAACK,UAPb;MAAA;MAAA;MAAA,oBAUW,WAVX;MAAA,kBAWS,YAXT;MAAA,SAYE,KAZF;MAAA,aAaI,KAbJ;MAAA,cAcK,KAdL;MAAA,kBAeU;QACd,iBAAiB,MADH;QAEd,iBAAiBD,MAAM,CAACS,QAAQ,CAACL,KAAV,CAFT;QAGd,aAAaL,EAAE,CAACK;MAHF,CAfV;MAAA,mBAoBYgB;IApBZ,GAqBDV,OArBC,EAsBDJ,KAtBC,GAuBG;MACPgB,OAAO,EAAEf,KAAK,CAACe,OADR;MAEPC,SAAS,EAAEhB,KAAK,CAACgB;IAFV,CAvBH,CAAD,CAATlC;IA8BA,OAAOE,aAAa,CAAC;MAAEQ;IAAF,CAAD,EAASa,OAAT,CAApB;EACD;;AAvFE,CAFgC,CAA9B","names":["VOverlay","VDialogTransition","makeTransitionProps","useProxiedModel","computed","inject","provide","ref","watch","genericComponent","getUid","useRender","VMenuSymbol","useForwardRef","useScopeId","VMenu","name","inheritAttrs","props","modelValue","Boolean","id","String","transition","component","emits","value","setup","attrs","slots","_ref","isActive","scopeId","uid","overlay","parent","openChildren","register","unregister","closeParents","setTimeout","val","onClickOutside","$event","default","activator"],"sources":["../../../src/components/VMenu/VMenu.tsx"],"sourcesContent":["// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VOverlay } from '@/components/VOverlay'\nimport { VDialogTransition } from '@/components/transitions'\n\n// Composables\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, provide, ref, watch } from 'vue'\nimport { genericComponent, getUid, useRender } from '@/util'\nimport { VMenuSymbol } from './shared'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useScopeId } from '@/composables/scopeId'\n\nexport const VMenu = genericComponent<new () => {\n  $slots: OverlaySlots\n}>()({\n  name: 'VMenu',\n\n  inheritAttrs: false,\n\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    modelValue: Boolean,\n    id: String,\n\n    ...makeTransitionProps({\n      transition: { component: VDialogTransition },\n    } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    let openChildren = 0\n    provide(VMenuSymbol, {\n      register () {\n        ++openChildren\n      },\n      unregister () {\n        --openChildren\n      },\n      closeParents () {\n        setTimeout(() => {\n          if (!openChildren) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    watch(isActive, val => {\n      val ? parent?.register() : parent?.unregister()\n    })\n\n    function onClickOutside () {\n      parent?.closeParents()\n    }\n\n    useRender(() => (\n      <VOverlay\n        ref={ overlay }\n        v-model={ isActive.value }\n        class={[\n          'v-menu',\n        ]}\n        transition={ props.transition }\n        absolute\n        closeOnContentClick\n        locationStrategy=\"connected\"\n        scrollStrategy=\"reposition\"\n        scrim={ false }\n        openDelay=\"300\"\n        closeDelay=\"250\"\n        activatorProps={{\n          'aria-haspopup': 'menu',\n          'aria-expanded': String(isActive.value),\n          'aria-owns': id.value,\n        }}\n        onClick:outside={ onClickOutside }\n        { ...scopeId }\n        { ...attrs }\n        v-slots={{\n          default: slots.default,\n          activator: slots.activator,\n        }}\n      />\n    ))\n\n    return useForwardRef({ id }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n"]},"metadata":{},"sourceType":"module"}