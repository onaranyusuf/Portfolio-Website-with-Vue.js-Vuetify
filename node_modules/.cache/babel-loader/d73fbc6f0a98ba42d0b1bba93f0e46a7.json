{"ast":null,"code":"// Composables\nimport { makeDelayProps, useDelay } from \"../../composables/delay.mjs\";\nimport { VMenuSymbol } from \"../VMenu/shared.mjs\"; // Utilities\n\nimport { getCurrentInstance, IN_BROWSER, isComponentInstance, propsFactory, SUPPORTS_FOCUS_VISIBLE } from \"../../util/index.mjs\";\nimport { computed, effectScope, inject, nextTick, onScopeDispose, ref, watch, watchEffect } from 'vue'; // Types\n\nexport const makeActivatorProps = propsFactory({\n  activator: [String, Object],\n  activatorProps: {\n    type: Object,\n    default: () => ({})\n  },\n  openOnClick: {\n    type: Boolean,\n    default: undefined\n  },\n  openOnHover: Boolean,\n  openOnFocus: {\n    type: Boolean,\n    default: undefined\n  },\n  closeOnContentClick: Boolean,\n  ...makeDelayProps()\n});\nexport function useActivator(props, _ref) {\n  let {\n    isActive,\n    isTop\n  } = _ref;\n  const activatorEl = ref();\n  let isHovered = false;\n  let isFocused = false;\n  const openOnFocus = computed(() => props.openOnFocus || props.openOnFocus == null && props.openOnHover);\n  const openOnClick = computed(() => props.openOnClick || props.openOnClick == null && !props.openOnHover && !openOnFocus.value);\n  const {\n    runOpenDelay,\n    runCloseDelay\n  } = useDelay(props, value => {\n    if (value === (props.openOnHover && isHovered || openOnFocus.value && isFocused) && !(props.openOnHover && isActive.value && !isTop.value)) {\n      isActive.value = value;\n    }\n  });\n  const availableEvents = {\n    click: e => {\n      e.stopPropagation();\n      activatorEl.value = e.currentTarget || e.target;\n      isActive.value = !isActive.value;\n    },\n    mouseenter: e => {\n      isHovered = true;\n      activatorEl.value = e.currentTarget || e.target;\n      runOpenDelay();\n    },\n    mouseleave: e => {\n      isHovered = false;\n      runCloseDelay();\n    },\n    focus: e => {\n      if (SUPPORTS_FOCUS_VISIBLE && !e.target.matches(':focus-visible')) return;\n      isFocused = true;\n      e.stopPropagation();\n      activatorEl.value = e.currentTarget || e.target;\n      runOpenDelay();\n    },\n    blur: e => {\n      isFocused = false;\n      e.stopPropagation();\n      runCloseDelay();\n    }\n  };\n  const activatorEvents = computed(() => {\n    const events = {};\n\n    if (openOnClick.value) {\n      events.click = availableEvents.click;\n    }\n\n    if (props.openOnHover) {\n      events.mouseenter = availableEvents.mouseenter;\n      events.mouseleave = availableEvents.mouseleave;\n    }\n\n    if (openOnFocus.value) {\n      events.focus = availableEvents.focus;\n      events.blur = availableEvents.blur;\n    }\n\n    return events;\n  });\n  const contentEvents = computed(() => {\n    const events = {};\n\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        isHovered = true;\n        runOpenDelay();\n      };\n\n      events.mouseleave = () => {\n        isHovered = false;\n        runCloseDelay();\n      };\n    }\n\n    if (props.closeOnContentClick) {\n      const menu = inject(VMenuSymbol, null);\n\n      events.click = () => {\n        isActive.value = false;\n        menu == null ? void 0 : menu.closeParents();\n      };\n    }\n\n    return events;\n  });\n  watch(isTop, val => {\n    if (val && props.openOnHover && !isHovered) {\n      isActive.value = false;\n    }\n  });\n  const activatorRef = ref();\n  watchEffect(() => {\n    if (!activatorRef.value) return;\n    nextTick(() => {\n      const activator = activatorRef.value;\n      activatorEl.value = isComponentInstance(activator) ? activator.$el : activator;\n    });\n  });\n  const vm = getCurrentInstance('useActivator');\n  let scope;\n  watch(() => !!props.activator, val => {\n    if (val && IN_BROWSER) {\n      scope = effectScope();\n      scope.run(() => {\n        _useActivator(props, vm, {\n          activatorEl,\n          activatorEvents\n        });\n      });\n    } else if (scope) {\n      scope.stop();\n    }\n  }, {\n    flush: 'post',\n    immediate: true\n  });\n  return {\n    activatorEl,\n    activatorRef,\n    activatorEvents,\n    contentEvents\n  };\n}\n\nfunction _useActivator(props, vm, _ref2) {\n  let {\n    activatorEl,\n    activatorEvents\n  } = _ref2;\n  watch(() => props.activator, (val, oldVal) => {\n    if (oldVal && val !== oldVal) {\n      const activator = getActivator(oldVal);\n      activator && unbindActivatorProps(activator);\n    }\n\n    if (val) {\n      nextTick(() => bindActivatorProps());\n    }\n  }, {\n    immediate: true\n  });\n  watch(() => props.activatorProps, () => {\n    bindActivatorProps();\n  });\n  onScopeDispose(() => {\n    unbindActivatorProps();\n  });\n\n  function bindActivatorProps() {\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();\n\n    let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;\n\n    if (!el) return;\n    Object.entries(activatorEvents.value).forEach(_ref3 => {\n      let [name, cb] = _ref3;\n      el.addEventListener(name, cb);\n    });\n    Object.keys(_props).forEach(k => {\n      if (_props[k] == null) {\n        el.removeAttribute(k);\n      } else {\n        el.setAttribute(k, _props[k]);\n      }\n    });\n  }\n\n  function unbindActivatorProps() {\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();\n\n    let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;\n\n    if (!el) return;\n    Object.entries(activatorEvents.value).forEach(_ref4 => {\n      let [name, cb] = _ref4;\n      el.removeEventListener(name, cb);\n    });\n    Object.keys(_props).forEach(k => {\n      el.removeAttribute(k);\n    });\n  }\n\n  function getActivator() {\n    var _activator;\n\n    let selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : props.activator;\n    let activator;\n\n    if (selector) {\n      if (selector === 'parent') {\n        var _vm$proxy, _vm$proxy$$el;\n\n        let el = vm == null ? void 0 : (_vm$proxy = vm.proxy) == null ? void 0 : (_vm$proxy$$el = _vm$proxy.$el) == null ? void 0 : _vm$proxy$$el.parentNode;\n\n        while (el.hasAttribute('data-no-activator')) {\n          el = el.parentNode;\n        }\n\n        activator = el;\n      } else if (typeof selector === 'string') {\n        // Selector\n        activator = document.querySelector(selector);\n      } else if ('$el' in selector) {\n        // Component (ref)\n        activator = selector.$el;\n      } else {\n        // HTMLElement | Element\n        activator = selector;\n      }\n    } // The activator should only be a valid element (Ignore comments and text nodes)\n\n\n    activatorEl.value = ((_activator = activator) == null ? void 0 : _activator.nodeType) === Node.ELEMENT_NODE ? activator : null;\n    return activatorEl.value;\n  }\n}","map":{"version":3,"mappings":"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","names":["makeDelayProps","useDelay","VMenuSymbol","getCurrentInstance","IN_BROWSER","isComponentInstance","propsFactory","SUPPORTS_FOCUS_VISIBLE","computed","effectScope","inject","nextTick","onScopeDispose","ref","watch","watchEffect","makeActivatorProps","activator","String","Object","activatorProps","type","default","openOnClick","Boolean","undefined","openOnHover","openOnFocus","closeOnContentClick","useActivator","props","isActive","isTop","_ref","activatorEl","isHovered","isFocused","value","runOpenDelay","runCloseDelay","availableEvents","click","e","stopPropagation","currentTarget","target","mouseenter","mouseleave","focus","matches","blur","activatorEvents","events","contentEvents","menu","closeParents","val","activatorRef","$el","vm","scope","run","_useActivator","stop","flush","immediate","_ref2","oldVal","getActivator","unbindActivatorProps","bindActivatorProps","el","_props","entries","forEach","_ref3","name","cb","addEventListener","keys","k","removeAttribute","setAttribute","_ref4","removeEventListener","selector","proxy","_vm$proxy","_vm$proxy$$el","parentNode","hasAttribute","document","querySelector","nodeType","Node","ELEMENT_NODE"],"sources":["../../../src/components/VOverlay/useActivator.tsx"],"sourcesContent":["// Composables\nimport { makeDelayProps, useDelay } from '@/composables/delay'\nimport { VMenuSymbol } from '@/components/VMenu/shared'\n\n// Utilities\nimport { getCurrentInstance, IN_BROWSER, isComponentInstance, propsFactory, SUPPORTS_FOCUS_VISIBLE } from '@/util'\nimport {\n  computed,\n  effectScope,\n  inject,\n  nextTick,\n  onScopeDispose,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\n\n// Types\nimport type { DelayProps } from '@/composables/delay'\nimport type {\n  ComponentInternalInstance,\n  ComponentPublicInstance,\n  EffectScope,\n  PropType,\n  Ref,\n} from 'vue'\n\ninterface ActivatorProps extends DelayProps {\n  activator?: 'parent' | string | Element | ComponentPublicInstance\n  activatorProps: Record<string, any>\n\n  openOnClick: boolean | undefined\n  openOnHover: boolean\n  openOnFocus: boolean | undefined\n\n  closeOnContentClick: boolean\n}\n\nexport const makeActivatorProps = propsFactory({\n  activator: [String, Object] as PropType<ActivatorProps['activator']>,\n  activatorProps: {\n    type: Object as PropType<ActivatorProps['activatorProps']>,\n    default: () => ({}),\n  },\n\n  openOnClick: {\n    type: Boolean,\n    default: undefined,\n  },\n  openOnHover: Boolean,\n  openOnFocus: {\n    type: Boolean,\n    default: undefined,\n  },\n\n  closeOnContentClick: Boolean,\n\n  ...makeDelayProps(),\n})\n\nexport function useActivator (\n  props: ActivatorProps,\n  { isActive, isTop }: { isActive: Ref<boolean>, isTop: Ref<boolean> }\n) {\n  const activatorEl = ref<HTMLElement>()\n\n  let isHovered = false\n  let isFocused = false\n\n  const openOnFocus = computed(() => props.openOnFocus || (props.openOnFocus == null && props.openOnHover))\n  const openOnClick = computed(() => props.openOnClick || (props.openOnClick == null && !props.openOnHover && !openOnFocus.value))\n\n  const { runOpenDelay, runCloseDelay } = useDelay(props, value => {\n    if (\n      value === (\n        (props.openOnHover && isHovered) ||\n        (openOnFocus.value && isFocused)\n      ) && !(props.openOnHover && isActive.value && !isTop.value)\n    ) {\n      isActive.value = value\n    }\n  })\n\n  const availableEvents = {\n    click: (e: MouseEvent) => {\n      e.stopPropagation()\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n      isActive.value = !isActive.value\n    },\n    mouseenter: (e: MouseEvent) => {\n      isHovered = true\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n      runOpenDelay()\n    },\n    mouseleave: (e: MouseEvent) => {\n      isHovered = false\n      runCloseDelay()\n    },\n    focus: (e: FocusEvent) => {\n      if (\n        SUPPORTS_FOCUS_VISIBLE &&\n        !(e.target as HTMLElement).matches(':focus-visible')\n      ) return\n\n      isFocused = true\n      e.stopPropagation()\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n\n      runOpenDelay()\n    },\n    blur: (e: FocusEvent) => {\n      isFocused = false\n      e.stopPropagation()\n\n      runCloseDelay()\n    },\n  }\n\n  const activatorEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n\n    if (openOnClick.value) {\n      events.click = availableEvents.click\n    }\n    if (props.openOnHover) {\n      events.mouseenter = availableEvents.mouseenter\n      events.mouseleave = availableEvents.mouseleave\n    }\n    if (openOnFocus.value) {\n      events.focus = availableEvents.focus\n      events.blur = availableEvents.blur\n    }\n\n    return events\n  })\n\n  const contentEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        isHovered = true\n        runOpenDelay()\n      }\n      events.mouseleave = () => {\n        isHovered = false\n        runCloseDelay()\n      }\n    }\n\n    if (props.closeOnContentClick) {\n      const menu = inject(VMenuSymbol, null)\n      events.click = () => {\n        isActive.value = false\n        menu?.closeParents()\n      }\n    }\n\n    return events\n  })\n\n  watch(isTop, val => {\n    if (val && props.openOnHover && !isHovered) {\n      isActive.value = false\n    }\n  })\n\n  const activatorRef = ref()\n  watchEffect(() => {\n    if (!activatorRef.value) return\n\n    nextTick(() => {\n      const activator = activatorRef.value\n      activatorEl.value = isComponentInstance(activator) ? activator.$el : activator\n    })\n  })\n\n  const vm = getCurrentInstance('useActivator')\n  let scope: EffectScope\n  watch(() => !!props.activator, val => {\n    if (val && IN_BROWSER) {\n      scope = effectScope()\n      scope.run(() => {\n        _useActivator(props, vm, { activatorEl, activatorEvents })\n      })\n    } else if (scope) {\n      scope.stop()\n    }\n  }, { flush: 'post', immediate: true })\n\n  return { activatorEl, activatorRef, activatorEvents, contentEvents }\n}\n\nfunction _useActivator (\n  props: ActivatorProps,\n  vm: ComponentInternalInstance,\n  { activatorEl, activatorEvents }: Pick<ReturnType<typeof useActivator>, 'activatorEl' | 'activatorEvents'>\n) {\n  watch(() => props.activator, (val, oldVal) => {\n    if (oldVal && val !== oldVal) {\n      const activator = getActivator(oldVal)\n      activator && unbindActivatorProps(activator)\n    }\n    if (val) {\n      nextTick(() => bindActivatorProps())\n    }\n  }, { immediate: true })\n\n  watch(() => props.activatorProps, () => {\n    bindActivatorProps()\n  })\n\n  onScopeDispose(() => {\n    unbindActivatorProps()\n  })\n\n  function bindActivatorProps (el = getActivator(), _props = props.activatorProps) {\n    if (!el) return\n\n    Object.entries(activatorEvents.value).forEach(([name, cb]) => {\n      el.addEventListener(name, cb as (e: Event) => void)\n    })\n\n    Object.keys(_props).forEach(k => {\n      if (_props[k] == null) {\n        el.removeAttribute(k)\n      } else {\n        el.setAttribute(k, _props[k])\n      }\n    })\n  }\n\n  function unbindActivatorProps (el = getActivator(), _props = props.activatorProps) {\n    if (!el) return\n\n    Object.entries(activatorEvents.value).forEach(([name, cb]) => {\n      el.removeEventListener(name, cb as (e: Event) => void)\n    })\n\n    Object.keys(_props).forEach(k => {\n      el.removeAttribute(k)\n    })\n  }\n\n  function getActivator (selector = props.activator): HTMLElement | undefined {\n    let activator\n    if (selector) {\n      if (selector === 'parent') {\n        let el = vm?.proxy?.$el?.parentNode\n        while (el.hasAttribute('data-no-activator')) {\n          el = el.parentNode\n        }\n        activator = el\n      } else if (typeof selector === 'string') {\n        // Selector\n        activator = document.querySelector(selector)\n      } else if ('$el' in selector) {\n        // Component (ref)\n        activator = selector.$el\n      } else {\n        // HTMLElement | Element\n        activator = selector\n      }\n    }\n\n    // The activator should only be a valid element (Ignore comments and text nodes)\n    activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n    return activatorEl.value\n  }\n}\n"]},"metadata":{},"sourceType":"module"}