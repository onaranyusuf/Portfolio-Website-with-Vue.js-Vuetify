{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n// Utilities\nimport { computed } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n\nconst positionValues = ['static', 'relative', 'fixed', 'absolute', 'sticky']; // Composables\n\nexport const makePositionProps = propsFactory({\n  position: {\n    type: String,\n    validator:\n    /* istanbul ignore next */\n    v => positionValues.includes(v)\n  }\n}, 'position');\nexport function usePosition(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const positionClasses = computed(() => {\n    return props.position ? `${name}--${props.position}` : undefined;\n  });\n  return {\n    positionClasses\n  };\n}","map":{"version":3,"mappings":";AAAA;AACA,SAASA,QAAT,QAAyB,KAAzB;SACSC,wBAAwBC,oB,qBAEjC;;AAGA,MAAMC,cAAc,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,UAAhC,EAA4C,QAA5C,CAAvB,C,CAQA;;AACA,OAAO,MAAMC,iBAAiB,GAAGF,YAAY,CAAC;EAC5CG,QAAQ,EAAE;IACRC,IAAI,EAAEC,MADE;IAERC,SAAS;IAAE;IAA4BC,CAAD,IAAYN,cAAc,CAACO,QAAfP,CAAwBM,CAAxBN;EAF1C;AADkC,CAAD,EAK1C,UAL0C,CAAtC;AAOP,OAAO,SAASQ,WAAT,CACLC,KADK,EAGL;EAAA,IADAC,IACA,uEADOZ,sBAAsB,EAC7B;EACA,MAAMa,eAAe,GAAGd,QAAQ,CAAC,MAAM;IACrC,OAAOY,KAAK,CAACP,QAANO,GAAkB,GAAEC,IAAK,KAAID,KAAK,CAACP,QAAS,EAA5CO,GAAgDG,SAAvD;EAD8B,EAAhC;EAIA,OAAO;IAAED;EAAF,CAAP;AACD","names":["computed","getCurrentInstanceName","propsFactory","positionValues","makePositionProps","position","type","String","validator","v","includes","usePosition","props","name","positionClasses","undefined"],"sources":["../../src/composables/position.ts"],"sourcesContent":["// Utilities\nimport { computed } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst positionValues = ['static', 'relative', 'fixed', 'absolute', 'sticky'] as const\n\ntype Position = typeof positionValues[number]\n\nexport interface PositionProps {\n  position: Position | undefined\n}\n\n// Composables\nexport const makePositionProps = propsFactory({\n  position: {\n    type: String as PropType<Position>,\n    validator: /* istanbul ignore next */ (v: any) => positionValues.includes(v),\n  },\n}, 'position')\n\nexport function usePosition (\n  props: PositionProps,\n  name = getCurrentInstanceName(),\n) {\n  const positionClasses = computed(() => {\n    return props.position ? `${name}--${props.position}` : undefined\n  })\n\n  return { positionClasses }\n}\n"]},"metadata":{},"sourceType":"module"}