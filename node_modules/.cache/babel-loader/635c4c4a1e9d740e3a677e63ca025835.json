{"ast":null,"code":"import { resolveDirective as _resolveDirective, withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VChip.css\"; // Components\n\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VChipGroupSymbol } from \"../VChipGroup/VChipGroup.mjs\";\nimport { VExpandXTransition } from \"../transitions/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\n\nimport { defineComponent } from \"../../util/index.mjs\";\nexport const VChip = defineComponent({\n  name: 'VChip',\n  directives: {\n    Ripple\n  },\n  props: {\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: IconValue,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$delete'\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close'\n    },\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete'\n    },\n    label: Boolean,\n    link: Boolean,\n    pill: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    text: String,\n    modelValue: {\n      type: Boolean,\n      default: true\n    },\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({\n      tag: 'span'\n    }),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'tonal'\n    })\n  },\n  emits: {\n    'click:close': e => true,\n    'update:active': value => true,\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const group = useGroupItem(props, VChipGroupSymbol, false);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses\n    } = useSize(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const link = useLink(props, attrs);\n\n    function onCloseClick(e) {\n      isActive.value = false;\n      emit('click:close', e);\n    }\n\n    return () => {\n      var _slots$default, _slots$default2;\n\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasAppend = !!(slots.append || props.appendIcon || props.appendAvatar);\n      const hasClose = !!(slots.close || props.closable);\n      const hasFilter = !!(slots.filter || props.filter) && group;\n      const hasPrepend = !!(slots.prepend || props.prependIcon || props.prependAvatar);\n      const hasColor = !group || group.isSelected.value;\n      const isClickable = !props.disabled && (!!group || link.isClickable.value || props.link);\n      const onClickFunc = props.link ? props.link : group == null ? void 0 : group.toggle;\n      return isActive.value && _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-chip', {\n          'v-chip--disabled': props.disabled,\n          'v-chip--label': props.label,\n          'v-chip--link': isClickable,\n          'v-chip--pill': props.pill\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value, group == null ? void 0 : group.selectedClass.value],\n        \"style\": [hasColor ? colorStyles.value : undefined],\n        \"disabled\": props.disabled || undefined,\n        \"draggable\": props.draggable,\n        \"href\": link.href.value,\n        \"onClick\": isClickable && onClickFunc\n      }, {\n        default: () => [genOverlays(isClickable, 'v-chip'), hasFilter && _createVNode(VExpandXTransition, {\n          \"key\": \"filter\"\n        }, {\n          default: () => [_withDirectives(_createVNode(\"div\", {\n            \"class\": \"v-chip__filter\"\n          }, [slots.filter ? slots.filter() : _createVNode(VIcon, {\n            \"icon\": props.filterIcon\n          }, null)]), [[_vShow, group.isSelected.value]])]\n        }), hasPrepend && _createVNode(\"div\", {\n          \"key\": \"prepend\",\n          \"class\": \"v-chip__prepend\"\n        }, [slots.prepend ? slots.prepend() : _createVNode(VAvatar, {\n          \"icon\": props.prependIcon,\n          \"image\": props.prependAvatar,\n          \"size\": props.size\n        }, null)]), (_slots$default = (_slots$default2 = slots.default) == null ? void 0 : _slots$default2.call(slots, {\n          isSelected: group == null ? void 0 : group.isSelected.value,\n          selectedClass: group == null ? void 0 : group.selectedClass.value,\n          select: group == null ? void 0 : group.select,\n          toggle: group == null ? void 0 : group.toggle,\n          value: group == null ? void 0 : group.value.value,\n          disabled: props.disabled\n        })) != null ? _slots$default : props.text, hasAppend && _createVNode(\"div\", {\n          \"key\": \"append\",\n          \"class\": \"v-chip__append\"\n        }, [slots.append ? slots.append() : _createVNode(VAvatar, {\n          \"icon\": props.appendIcon,\n          \"image\": props.appendAvatar,\n          \"size\": props.size\n        }, null)]), hasClose && _createVNode(\"div\", {\n          \"class\": \"v-chip__close\",\n          \"onClick\": onCloseClick\n        }, [slots.close ? slots.close({\n          props: {\n            onClick: onCloseClick\n          }\n        }) : _createVNode(VIcon, {\n          \"icon\": props.closeIcon,\n          \"size\": \"x-small\"\n        }, null)])]\n      }), [[_resolveDirective(\"ripple\"), isClickable && props.ripple, null]]);\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VAvatar","VChipGroupSymbol","VExpandXTransition","VIcon","genOverlays","makeVariantProps","useVariant","makeBorderProps","useBorder","makeDensityProps","useDensity","makeElevationProps","useElevation","makeGroupItemProps","useGroupItem","makeRoundedProps","useRounded","makeRouterProps","useLink","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","useProxiedModel","IconValue","Ripple","defineComponent","VChip","name","directives","props","activeClass","String","appendAvatar","appendIcon","closable","Boolean","closeIcon","type","default","closeLabel","draggable","filter","filterIcon","label","link","pill","prependAvatar","prependIcon","ripple","text","modelValue","tag","variant","emits","e","value","setup","attrs","emit","slots","_ref","isActive","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","elevationClasses","group","roundedClasses","sizeClasses","densityClasses","onCloseClick","Tag","isLink","hasAppend","append","hasClose","close","hasFilter","hasPrepend","prepend","hasColor","isSelected","isClickable","disabled","onClickFunc","toggle","undefined","selectedClass","href","size","_slots$default2","select","onClick"],"sources":["../../../src/components/VChip/VChip.tsx"],"sourcesContent":["// Styles\nimport './VChip.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { IconValue } from '@/composables/icons'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { defineComponent } from '@/util'\n\nexport const VChip = defineComponent({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: {\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: IconValue,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    pill: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    text: String,\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'span' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'tonal' } as const),\n  },\n\n  emits: {\n    'click:close': (e: Event) => true,\n    'update:active': (value: Boolean) => true,\n    'update:modelValue': (value: Boolean) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { elevationClasses } = useElevation(props)\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { densityClasses } = useDensity(props)\n    const link = useLink(props, attrs)\n\n    function onCloseClick (e: Event) {\n      isActive.value = false\n\n      emit('click:close', e)\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppend = !!(slots.append || props.appendIcon || props.appendAvatar)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrepend = !!(slots.prepend || props.prependIcon || props.prependAvatar)\n      const hasColor = !group || group.isSelected.value\n      const isClickable = !props.disabled && (!!group || link.isClickable.value || props.link)\n      const onClickFunc = props.link ? props.link : group?.toggle\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable,\n              'v-chip--pill': props.pill,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          href={ link.href.value }\n          v-ripple={ [isClickable && props.ripple, null] }\n          onClick={ isClickable && onClickFunc }\n        >\n          { genOverlays(isClickable, 'v-chip') }\n\n          { hasFilter && (\n            <VExpandXTransition key=\"filter\">\n              <div\n                class=\"v-chip__filter\"\n                v-show={ group.isSelected.value }\n              >\n                { slots.filter\n                  ? slots.filter()\n                  : <VIcon icon={ props.filterIcon } />\n                }\n              </div>\n            </VExpandXTransition>\n          ) }\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-chip__prepend\">\n              { slots.prepend\n                ? slots.prepend()\n                : (\n                  <VAvatar\n                    icon={ props.prependIcon }\n                    image={ props.prependAvatar }\n                    size={ props.size }\n                  />\n                )\n              }\n            </div>\n          ) }\n\n          { slots.default?.({\n            isSelected: group?.isSelected.value,\n            selectedClass: group?.selectedClass.value,\n            select: group?.select,\n            toggle: group?.toggle,\n            value: group?.value.value,\n            disabled: props.disabled,\n          }) ?? props.text }\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-chip__append\">\n              { slots.append\n                ? slots.append()\n                : (\n                  <VAvatar\n                    icon={ props.appendIcon }\n                    image={ props.appendAvatar }\n                    size={ props.size }\n                  />\n                )\n              }\n            </div>\n          ) }\n\n          { hasClose && (\n            <div\n              class=\"v-chip__close\"\n              onClick={ onCloseClick }\n            >\n              { slots.close\n                ? slots.close({ props: { onClick: onCloseClick } })\n                : (\n                  <VIcon\n                    icon={ props.closeIcon }\n                    size=\"x-small\"\n                  />\n                )\n              }\n            </div>\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n"]},"metadata":{},"sourceType":"module"}