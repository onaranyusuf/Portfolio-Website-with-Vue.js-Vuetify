{"ast":null,"code":"import { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VDivider } from \"../VDivider/index.mjs\";\nimport { VListGroup } from \"./VListGroup.mjs\";\nimport { VListItem } from \"./VListItem.mjs\";\nimport { VListSubheader } from \"./VListSubheader.mjs\"; // Utilities\n\nimport { genericComponent } from \"../../util/index.mjs\";\nimport { createList } from \"./list.mjs\"; // Types\n\nexport const VListChildren = genericComponent()({\n  name: 'VListChildren',\n  props: {\n    items: Array\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    createList();\n    return () => {\n      var _slots$default, _slots$default2, _props$items;\n\n      return (_slots$default = (_slots$default2 = slots.default) == null ? void 0 : _slots$default2.call(slots)) != null ? _slots$default : (_props$items = props.items) == null ? void 0 : _props$items.map(_ref2 => {\n        let {\n          children,\n          props: itemProps,\n          type,\n          raw: item\n        } = _ref2;\n        if (type === 'divider') return _createVNode(VDivider, itemProps, null);\n        if (type === 'subheader') return _createVNode(VListSubheader, itemProps, slots);\n        const slotsWithItem = {\n          subtitle: slots.subtitle ? slotProps => {\n            var _slots$subtitle;\n\n            return (_slots$subtitle = slots.subtitle) == null ? void 0 : _slots$subtitle.call(slots, { ...slotProps,\n              item\n            });\n          } : undefined,\n          prepend: slots.prepend ? slotProps => {\n            var _slots$prepend;\n\n            return (_slots$prepend = slots.prepend) == null ? void 0 : _slots$prepend.call(slots, { ...slotProps,\n              item\n            });\n          } : undefined,\n          append: slots.append ? slotProps => {\n            var _slots$append;\n\n            return (_slots$append = slots.append) == null ? void 0 : _slots$append.call(slots, { ...slotProps,\n              item\n            });\n          } : undefined,\n          default: slots.default ? slotProps => {\n            var _slots$default3;\n\n            return (_slots$default3 = slots.default) == null ? void 0 : _slots$default3.call(slots, { ...slotProps,\n              item\n            });\n          } : undefined,\n          title: slots.title ? slotProps => {\n            var _slots$title;\n\n            return (_slots$title = slots.title) == null ? void 0 : _slots$title.call(slots, { ...slotProps,\n              item\n            });\n          } : undefined\n        };\n        return children ? _createVNode(VListGroup, {\n          \"value\": itemProps == null ? void 0 : itemProps.value\n        }, {\n          activator: _ref3 => {\n            let {\n              props: activatorProps\n            } = _ref3;\n            return slots.header ? slots.header({ ...itemProps,\n              ...activatorProps\n            }) : _createVNode(VListItem, _mergeProps(itemProps, activatorProps), slotsWithItem);\n          },\n          default: () => _createVNode(VListChildren, {\n            \"items\": children\n          }, slots)\n        }) : slots.item ? slots.item(itemProps) : _createVNode(VListItem, itemProps, slotsWithItem);\n      });\n    };\n  }\n\n});","map":{"version":3,"mappings":"qHAAA;;SACSA,gB;SACAC,kB;SACAC,iB;SACAC,sB,wBAET;;SACSC,wB;SACAC,kB,cAET;;AAOA,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,GAWxC;EACHG,IAAI,EAAE,eADH;EAGHC,KAAK,EAAE;IACLC,KAAK,EAAEC;EADF,CAHJ;;EAOHC,KAAK,CAAEH,KAAF,QAAoB;IAAA,IAAX;MAAEI;IAAF,IAAWC;IACvBR,UAAU;IAEV,OAAO;MAAA;;MAAA,4CAAMO,KAAK,CAACE,OAAZ,qBAAMC,2BAAN,6CAA2BP,KAAK,CAACC,KAAjC,qBAA2BO,aAAaC,GAAb,CAAiBC,SAAqD;QAAA,IAApD;UAAEC,QAAF;UAAYX,KAAK,EAAEY,SAAnB;UAA8BC,IAA9B;UAAoCC,GAAG,EAAEC;QAAzC,IAAoDL;QACtG,IAAIG,IAAI,KAAK,SAAb,EAAwB,8BAAqBD,SAArB;QAExB,IAAIC,IAAI,KAAK,WAAb,EAA0B,oCAA2BD,SAA3B,EAAgDR,KAAhD;QAE1B,MAAMY,aAAa,GAAG;UACpBC,QAAQ,EAAEb,KAAK,CAACa,QAANb,GAAkBc,SAAD;YAAA;;YAAA,0BAAoBd,KAAK,CAACa,QAA1B,qBAAoBE,4BAAiB,EAAE,GAAGD,SAAL;cAAgBH;YAAhB,CAAjB,CAApB;UAAjB,IAAgFK,SADtE;UAEpBC,OAAO,EAAEjB,KAAK,CAACiB,OAANjB,GAAiBc,SAAD;YAAA;;YAAA,yBAAoBd,KAAK,CAACiB,OAA1B,qBAAoBC,2BAAgB,EAAE,GAAGJ,SAAL;cAAgBH;YAAhB,CAAhB,CAApB;UAAhB,IAA8EK,SAFnE;UAGpBG,MAAM,EAAEnB,KAAK,CAACmB,MAANnB,GAAgBc,SAAD;YAAA;;YAAA,wBAAoBd,KAAK,CAACmB,MAA1B,qBAAoBC,0BAAe,EAAE,GAAGN,SAAL;cAAgBH;YAAhB,CAAf,CAApB;UAAf,IAA4EK,SAHhE;UAIpBd,OAAO,EAAEF,KAAK,CAACE,OAANF,GAAiBc,SAAD;YAAA;;YAAA,0BAAoBd,KAAK,CAACE,OAA1B,qBAAoBmB,4BAAgB,EAAE,GAAGP,SAAL;cAAgBH;YAAhB,CAAhB,CAApB;UAAhB,IAA8EK,SAJnE;UAKpBM,KAAK,EAAEtB,KAAK,CAACsB,KAANtB,GAAec,SAAD;YAAA;;YAAA,uBAAoBd,KAAK,CAACsB,KAA1B,qBAAoBC,yBAAc,EAAE,GAAGT,SAAL;cAAgBH;YAAhB,CAAd,CAApB;UAAd,IAA0EK;QAL7D,CAAtB;QAQA,OAAOT,QAAQ;UAAA,SAEHC,SAFG,QAEHA,GAFG,MAEHA,YAAS,CAAEgB;QAFR;UAKTC,SAAS,EAAEC;YAAA,IAAC;cAAE9B,KAAK,EAAE+B;YAAT,IAADD;YAAA,OAA+B1B,KAAK,CAAC4B,MAAN5B,GACtCA,KAAK,CAAC4B,MAAN5B,CAAa,EAAE,GAAGQ,SAAL;cAAgB,GAAGmB;YAAnB,CAAb3B,CADsCA,uCAEtBQ,SAFsB,EAELmB,cAFK,GAEsBf,aAFtB,CAA/B;UALF;UAQTV,OAAO,EAAE;YAAA,SACgBK;UADhB,GACqCP,KADrC;QARA,KAcbA,KAAK,CAACW,IAANX,GAAaA,KAAK,CAACW,IAANX,CAAWQ,SAAXR,CAAbA,2BAESQ,SAFT,EAGcI,aAHd,CAdF;MAbgC,EAA3B;IAAP;EAmCD;;AA7CE,CAXwC,CAAtC","names":["VDivider","VListGroup","VListItem","VListSubheader","genericComponent","createList","VListChildren","name","props","items","Array","setup","slots","_ref","default","_slots$default2","_props$items","map","_ref2","children","itemProps","type","raw","item","slotsWithItem","subtitle","slotProps","_slots$subtitle","undefined","prepend","_slots$prepend","append","_slots$append","_slots$default3","title","_slots$title","value","activator","_ref3","activatorProps","header"],"sources":["../../../src/components/VList/VListChildren.tsx"],"sourcesContent":["// Components\nimport { VDivider } from '../VDivider'\nimport { VListGroup } from './VListGroup'\nimport { VListItem } from './VListItem'\nimport { VListSubheader } from './VListSubheader'\n\n// Utilities\nimport { genericComponent } from '@/util'\nimport { createList } from './list'\n\n// Types\nimport type { InternalListItem } from './VList'\nimport type { ListItemSubtitleSlot, ListItemTitleSlot } from './VListItem'\nimport type { ListGroupActivatorSlot } from './VListGroup'\nimport type { MakeSlots } from '@/util'\nimport type { Prop } from 'vue'\n\nexport const VListChildren = genericComponent<new <T extends InternalListItem>() => {\n  $props: {\n    items?: T[]\n  }\n  $slots: MakeSlots<{\n    default: []\n    header: [ListGroupActivatorSlot]\n    item: [T]\n    title: [ListItemTitleSlot]\n    subtitle: [ListItemSubtitleSlot]\n  }>\n}>()({\n  name: 'VListChildren',\n\n  props: {\n    items: Array as Prop<InternalListItem[]>,\n  },\n\n  setup (props, { slots }) {\n    createList()\n\n    return () => slots.default?.() ?? props.items?.map(({ children, props: itemProps, type, raw: item }) => {\n      if (type === 'divider') return <VDivider {...itemProps} />\n\n      if (type === 'subheader') return <VListSubheader {...itemProps} v-slots={ slots } />\n\n      const slotsWithItem = {\n        subtitle: slots.subtitle ? (slotProps: any) => slots.subtitle?.({ ...slotProps, item }) : undefined,\n        prepend: slots.prepend ? (slotProps: any) => slots.prepend?.({ ...slotProps, item }) : undefined,\n        append: slots.append ? (slotProps: any) => slots.append?.({ ...slotProps, item }) : undefined,\n        default: slots.default ? (slotProps: any) => slots.default?.({ ...slotProps, item }) : undefined,\n        title: slots.title ? (slotProps: any) => slots.title?.({ ...slotProps, item }) : undefined,\n      }\n\n      return children ? (\n        <VListGroup\n          value={ itemProps?.value }\n        >\n          {{\n            activator: ({ props: activatorProps }) => slots.header\n              ? slots.header({ ...itemProps, ...activatorProps })\n              : <VListItem { ...itemProps } { ...activatorProps } v-slots={ slotsWithItem } />,\n            default: () => (\n              <VListChildren items={ children } v-slots={ slots } />\n            ),\n          }}\n        </VListGroup>\n      ) : (\n        slots.item ? slots.item(itemProps) : (\n          <VListItem\n            { ...itemProps }\n            v-slots={ slotsWithItem }\n          />\n        )\n      )\n    })\n  },\n})\n"]},"metadata":{},"sourceType":"module"}