{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2146fc07\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Coding is \");\n\nconst _hoisted_3 = {\n  class: \"typed-text\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, [_hoisted_2, _createElementVNode(\"span\", _hoisted_3, _toDisplayString(_ctx.typeValue), 1\n  /* TEXT */\n  ), _createElementVNode(\"span\", {\n    class: _normalizeClass([\"cursor\", {\n      'typing': _ctx.typeStatus\n    }])\n  }, \"Â \", 2\n  /* CLASS */\n  )])]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;iDACL;;;EACIA,KAAK,EAAC;;;uBAFhBC,oBAKM,KALN,cAKM,CAJJC,oBAGK,IAHL,EAGK,IAHL,EAGK,aAFHA,oBAA+C,MAA/C,cAA+CC,iBAAnBC,cAAmB,CAA/C,EAAqC;EAAA;EAArC,CAEG,EADHF,oBAAkE,MAAlE,EAAkE;IAA5DF,KAAK,mBAAC,QAAD,EAAS;MAAA,UAAoBI;IAApB,CAAT;EAAuD,CAAlE,EAAqD,GAArD,EAA2D;EAAA;EAA3D,CACG,CAHL,CAII,CALN","names":["class","_createElementBlock","_createElementVNode","_toDisplayString","_ctx"],"sourceRoot":"","sources":["C:\\Users\\Yusuf\\yusufsite\\src\\components\\typing.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>Coding is\r\n      <span class=\"typed-text\">{{ typeValue }}</span>\r\n      <span class=\"cursor\" :class=\"{'typing': typeStatus}\">&nbsp;</span>\r\n    </h1>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { setTimeout } from 'timers';\r\n  export default {\r\n    name=\"TypeEffect from '@/components/typing.vue'\"\r\n    data: () => {\r\n      return {\r\n        typeValue: '',\r\n        typeStatus: false,\r\n        typeArray: ['fun', 'awesome', 'a journey', 'life'],\r\n        typingSpeed: 200,\r\n        erasingSpeed: 100,\r\n        newTextDelay: 2000,\r\n        typeArrayIndex: 0,\r\n        charIndex: 0\r\n      }\r\n    },\r\n    methods: {\r\n      typeText() {\r\n        if(this.charIndex < this.typeArray[this.typeArrayIndex].length) {\r\n          if(!this.typeStatus)\r\n            this.typeStatus = true;\r\n          this.typeValue += this.typeArray[this.typeArrayIndex].charAt(this.charIndex);\r\n          this.charIndex += 1;\r\n          setTimeout(this.typeText, this.typingSpeed);\r\n        }\r\n        else {\r\n          this.typeStatus = false;\r\n          setTimeout(this.eraseText, this.newTextDelay);\r\n        }\r\n      },\r\n      eraseText() {\r\n        if(this.charIndex > 0) {\r\n          if(!this.typeStatus)\r\n            this.typeStatus = true;\r\n          this.typeValue = this.typeArray[this.typeArrayIndex].substring(0, this.charIndex - 1);\r\n          this.charIndex -= 1;\r\n          setTimeout(this.eraseText, this.erasingSpeed);\r\n        }\r\n        else {\r\n          this.typeStatus = false;\r\n          this.typeArrayIndex += 1;\r\n          if(this.typeArrayIndex >= this.typeArray.length)\r\n            this.typeArrayIndex = 0;\r\n          setTimeout(this.typeText, this.typingSpeed + 1000);\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      setTimeout(this.typeText, this.newTextDelay + 200);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .container {\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  h1 {\r\n    font-size: 6rem;\r\n    font-weight: normal;\r\n    span.typed-text {\r\n      color: #D2B94B;\r\n    }\r\n    span.cursor {\r\n      display: inline-block;\r\n      margin-left: 3px;\r\n      width: 4px;\r\n      background-color: #fff;\r\n      animation: cursorBlink 1s infinite;\r\n    }\r\n    span.cursor.typing {\r\n      animation: none;\r\n    }\r\n  }\r\n  @keyframes cursorBlink {\r\n    49% { background-color: #fff; }\r\n    50% { background-color: transparent; }\r\n    99% { background-color: transparent; }\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}